
day07_a2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001964  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000170  08001af4  08001af4  00002af4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001c64  08001c64  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  08001c64  08001c64  00002c64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001c6c  08001c6c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001c6c  08001c6c  00002c6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001c70  08001c70  00002c70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001c74  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000018ee  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000007bb  00000000  00000000  00004974  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001e8  00000000  00000000  00005130  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000014a  00000000  00000000  00005318  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001a298  00000000  00000000  00005462  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000024df  00000000  00000000  0001f6fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008d9f4  00000000  00000000  00021bd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000af5cd  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000ee4  00000000  00000000  000af610  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 0000001f  00000000  00000000  000b04f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 0000005e  00000000  00000000  000b0513  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08001adc 	.word	0x08001adc

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	08001adc 	.word	0x08001adc

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <__io_putchar>:
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

//void ITM_SendChar(uint8_t ch)
int __io_putchar(int ch)
{
 8000270:	b480      	push	{r7}
 8000272:	b083      	sub	sp, #12
 8000274:	af00      	add	r7, sp, #0
 8000276:	6078      	str	r0, [r7, #4]
	//Enable TRCENA
	DEMCR |= (1 << 24);
 8000278:	4b0e      	ldr	r3, [pc, #56]	@ (80002b4 <__io_putchar+0x44>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	4a0d      	ldr	r2, [pc, #52]	@ (80002b4 <__io_putchar+0x44>)
 800027e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000282:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000284:	4b0c      	ldr	r3, [pc, #48]	@ (80002b8 <__io_putchar+0x48>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	4a0b      	ldr	r2, [pc, #44]	@ (80002b8 <__io_putchar+0x48>)
 800028a:	f043 0301 	orr.w	r3, r3, #1
 800028e:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000290:	bf00      	nop
 8000292:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	f003 0301 	and.w	r3, r3, #1
 800029c:	2b00      	cmp	r3, #0
 800029e:	d0f8      	beq.n	8000292 <__io_putchar+0x22>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002a0:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	6013      	str	r3, [r2, #0]

	return 1;
 80002a8:	2301      	movs	r3, #1
}
 80002aa:	4618      	mov	r0, r3
 80002ac:	370c      	adds	r7, #12
 80002ae:	46bd      	mov	sp, r7
 80002b0:	bc80      	pop	{r7}
 80002b2:	4770      	bx	lr
 80002b4:	e000edfc 	.word	0xe000edfc
 80002b8:	e0000e00 	.word	0xe0000e00

080002bc <LedInit>:


#include "led.h"
#include "stm32f4xx.h"

void LedInit(uint32_t pin) {
 80002bc:	b480      	push	{r7}
 80002be:	b083      	sub	sp, #12
 80002c0:	af00      	add	r7, sp, #0
 80002c2:	6078      	str	r0, [r7, #4]

	RCC->AHB1ENR |= BV(LED_GPIO_EN);
 80002c4:	4b28      	ldr	r3, [pc, #160]	@ (8000368 <LedInit+0xac>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002c8:	4a27      	ldr	r2, [pc, #156]	@ (8000368 <LedInit+0xac>)
 80002ca:	f043 0308 	orr.w	r3, r3, #8
 80002ce:	6313      	str	r3, [r2, #48]	@ 0x30

	LED_GPIO->MODER &= ~BV(pin * 2 + 1);
 80002d0:	4b26      	ldr	r3, [pc, #152]	@ (800036c <LedInit+0xb0>)
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	687a      	ldr	r2, [r7, #4]
 80002d6:	0052      	lsls	r2, r2, #1
 80002d8:	3201      	adds	r2, #1
 80002da:	2101      	movs	r1, #1
 80002dc:	fa01 f202 	lsl.w	r2, r1, r2
 80002e0:	43d2      	mvns	r2, r2
 80002e2:	4611      	mov	r1, r2
 80002e4:	4a21      	ldr	r2, [pc, #132]	@ (800036c <LedInit+0xb0>)
 80002e6:	400b      	ands	r3, r1
 80002e8:	6013      	str	r3, [r2, #0]
	LED_GPIO->MODER |= BV(pin * 2);
 80002ea:	4b20      	ldr	r3, [pc, #128]	@ (800036c <LedInit+0xb0>)
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	687a      	ldr	r2, [r7, #4]
 80002f0:	0052      	lsls	r2, r2, #1
 80002f2:	2101      	movs	r1, #1
 80002f4:	fa01 f202 	lsl.w	r2, r1, r2
 80002f8:	4611      	mov	r1, r2
 80002fa:	4a1c      	ldr	r2, [pc, #112]	@ (800036c <LedInit+0xb0>)
 80002fc:	430b      	orrs	r3, r1
 80002fe:	6013      	str	r3, [r2, #0]

	LED_GPIO->OSPEEDR &= ~(BV(pin * 2 + 1) | BV(pin * 2));
 8000300:	4b1a      	ldr	r3, [pc, #104]	@ (800036c <LedInit+0xb0>)
 8000302:	689b      	ldr	r3, [r3, #8]
 8000304:	687a      	ldr	r2, [r7, #4]
 8000306:	0052      	lsls	r2, r2, #1
 8000308:	3201      	adds	r2, #1
 800030a:	2101      	movs	r1, #1
 800030c:	4091      	lsls	r1, r2
 800030e:	687a      	ldr	r2, [r7, #4]
 8000310:	0052      	lsls	r2, r2, #1
 8000312:	2001      	movs	r0, #1
 8000314:	fa00 f202 	lsl.w	r2, r0, r2
 8000318:	430a      	orrs	r2, r1
 800031a:	43d2      	mvns	r2, r2
 800031c:	4611      	mov	r1, r2
 800031e:	4a13      	ldr	r2, [pc, #76]	@ (800036c <LedInit+0xb0>)
 8000320:	400b      	ands	r3, r1
 8000322:	6093      	str	r3, [r2, #8]

	LED_GPIO->PUPDR &= ~(BV(pin * 2 + 1) | BV(pin * 2));
 8000324:	4b11      	ldr	r3, [pc, #68]	@ (800036c <LedInit+0xb0>)
 8000326:	68db      	ldr	r3, [r3, #12]
 8000328:	687a      	ldr	r2, [r7, #4]
 800032a:	0052      	lsls	r2, r2, #1
 800032c:	3201      	adds	r2, #1
 800032e:	2101      	movs	r1, #1
 8000330:	4091      	lsls	r1, r2
 8000332:	687a      	ldr	r2, [r7, #4]
 8000334:	0052      	lsls	r2, r2, #1
 8000336:	2001      	movs	r0, #1
 8000338:	fa00 f202 	lsl.w	r2, r0, r2
 800033c:	430a      	orrs	r2, r1
 800033e:	43d2      	mvns	r2, r2
 8000340:	4611      	mov	r1, r2
 8000342:	4a0a      	ldr	r2, [pc, #40]	@ (800036c <LedInit+0xb0>)
 8000344:	400b      	ands	r3, r1
 8000346:	60d3      	str	r3, [r2, #12]

	LED_GPIO->OTYPER &= ~BV(pin);
 8000348:	4b08      	ldr	r3, [pc, #32]	@ (800036c <LedInit+0xb0>)
 800034a:	685b      	ldr	r3, [r3, #4]
 800034c:	2101      	movs	r1, #1
 800034e:	687a      	ldr	r2, [r7, #4]
 8000350:	fa01 f202 	lsl.w	r2, r1, r2
 8000354:	43d2      	mvns	r2, r2
 8000356:	4611      	mov	r1, r2
 8000358:	4a04      	ldr	r2, [pc, #16]	@ (800036c <LedInit+0xb0>)
 800035a:	400b      	ands	r3, r1
 800035c:	6053      	str	r3, [r2, #4]
}
 800035e:	bf00      	nop
 8000360:	370c      	adds	r7, #12
 8000362:	46bd      	mov	sp, r7
 8000364:	bc80      	pop	{r7}
 8000366:	4770      	bx	lr
 8000368:	40023800 	.word	0x40023800
 800036c:	40020c00 	.word	0x40020c00

08000370 <LedOn>:

void LedOn(uint32_t pin) {
 8000370:	b480      	push	{r7}
 8000372:	b083      	sub	sp, #12
 8000374:	af00      	add	r7, sp, #0
 8000376:	6078      	str	r0, [r7, #4]

	LED_GPIO->ODR |= BV(pin);
 8000378:	4b07      	ldr	r3, [pc, #28]	@ (8000398 <LedOn+0x28>)
 800037a:	695b      	ldr	r3, [r3, #20]
 800037c:	2101      	movs	r1, #1
 800037e:	687a      	ldr	r2, [r7, #4]
 8000380:	fa01 f202 	lsl.w	r2, r1, r2
 8000384:	4611      	mov	r1, r2
 8000386:	4a04      	ldr	r2, [pc, #16]	@ (8000398 <LedOn+0x28>)
 8000388:	430b      	orrs	r3, r1
 800038a:	6153      	str	r3, [r2, #20]
}
 800038c:	bf00      	nop
 800038e:	370c      	adds	r7, #12
 8000390:	46bd      	mov	sp, r7
 8000392:	bc80      	pop	{r7}
 8000394:	4770      	bx	lr
 8000396:	bf00      	nop
 8000398:	40020c00 	.word	0x40020c00

0800039c <LedOff>:

void LedOff(uint32_t pin) {
 800039c:	b480      	push	{r7}
 800039e:	b083      	sub	sp, #12
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	6078      	str	r0, [r7, #4]

	LED_GPIO->ODR &= ~BV(pin);
 80003a4:	4b07      	ldr	r3, [pc, #28]	@ (80003c4 <LedOff+0x28>)
 80003a6:	695b      	ldr	r3, [r3, #20]
 80003a8:	2101      	movs	r1, #1
 80003aa:	687a      	ldr	r2, [r7, #4]
 80003ac:	fa01 f202 	lsl.w	r2, r1, r2
 80003b0:	43d2      	mvns	r2, r2
 80003b2:	4611      	mov	r1, r2
 80003b4:	4a03      	ldr	r2, [pc, #12]	@ (80003c4 <LedOff+0x28>)
 80003b6:	400b      	ands	r3, r1
 80003b8:	6153      	str	r3, [r2, #20]
}
 80003ba:	bf00      	nop
 80003bc:	370c      	adds	r7, #12
 80003be:	46bd      	mov	sp, r7
 80003c0:	bc80      	pop	{r7}
 80003c2:	4770      	bx	lr
 80003c4:	40020c00 	.word	0x40020c00

080003c8 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b08a      	sub	sp, #40	@ 0x28
 80003cc:	af00      	add	r7, sp, #0
	char str[32];
	SystemInit();
 80003ce:	f000 f8df 	bl	8000590 <SystemInit>
	LedInit(LED_RED);
 80003d2:	200e      	movs	r0, #14
 80003d4:	f7ff ff72 	bl	80002bc <LedInit>
	LedInit(LED_BLUE);
 80003d8:	200f      	movs	r0, #15
 80003da:	f7ff ff6f 	bl	80002bc <LedInit>
	UartInit(BAUD_9600);
 80003de:	f44f 5016 	mov.w	r0, #9600	@ 0x2580
 80003e2:	f000 f90b 	bl	80005fc <UartInit>
	int choice;
	while(1)
	{
	     UartPuts("Enter choice : 1. Red Led On 2. Red Led Off 3. Blue Led Off\r\n");
 80003e6:	4818      	ldr	r0, [pc, #96]	@ (8000448 <main+0x80>)
 80003e8:	f000 f9a2 	bl	8000730 <UartPuts>
	     UartGets(str);
 80003ec:	f107 0308 	add.w	r3, r7, #8
 80003f0:	4618      	mov	r0, r3
 80003f2:	f000 f9b9 	bl	8000768 <UartGets>
	     scanf(str, "%d" , &choice);
 80003f6:	1d3a      	adds	r2, r7, #4
 80003f8:	f107 0308 	add.w	r3, r7, #8
 80003fc:	4913      	ldr	r1, [pc, #76]	@ (800044c <main+0x84>)
 80003fe:	4618      	mov	r0, r3
 8000400:	f000 fac4 	bl	800098c <iscanf>
	     switch(choice)
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	3b01      	subs	r3, #1
 8000408:	2b03      	cmp	r3, #3
 800040a:	d8ec      	bhi.n	80003e6 <main+0x1e>
 800040c:	a201      	add	r2, pc, #4	@ (adr r2, 8000414 <main+0x4c>)
 800040e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000412:	bf00      	nop
 8000414:	08000425 	.word	0x08000425
 8000418:	0800042d 	.word	0x0800042d
 800041c:	08000435 	.word	0x08000435
 8000420:	0800043d 	.word	0x0800043d
	     {
	     case 1 : LedOn(LED_RED);
 8000424:	200e      	movs	r0, #14
 8000426:	f7ff ffa3 	bl	8000370 <LedOn>
	             break;
 800042a:	e00c      	b.n	8000446 <main+0x7e>

	     case 2 : LedOff(LED_RED);
 800042c:	200e      	movs	r0, #14
 800042e:	f7ff ffb5 	bl	800039c <LedOff>
	             break;
 8000432:	e008      	b.n	8000446 <main+0x7e>

	     case 3 : LedOn(LED_BLUE);
 8000434:	200f      	movs	r0, #15
 8000436:	f7ff ff9b 	bl	8000370 <LedOn>
	             break;
 800043a:	e004      	b.n	8000446 <main+0x7e>

	     case 4 : LedOff(LED_BLUE);
 800043c:	200f      	movs	r0, #15
 800043e:	f7ff ffad 	bl	800039c <LedOff>
	             break;
 8000442:	bf00      	nop
 8000444:	e7cf      	b.n	80003e6 <main+0x1e>
	     UartPuts("Enter choice : 1. Red Led On 2. Red Led Off 3. Blue Led Off\r\n");
 8000446:	e7ce      	b.n	80003e6 <main+0x1e>
 8000448:	08001af4 	.word	0x08001af4
 800044c:	08001b34 	.word	0x08001b34

08000450 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000450:	b580      	push	{r7, lr}
 8000452:	b086      	sub	sp, #24
 8000454:	af00      	add	r7, sp, #0
 8000456:	60f8      	str	r0, [r7, #12]
 8000458:	60b9      	str	r1, [r7, #8]
 800045a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800045c:	2300      	movs	r3, #0
 800045e:	617b      	str	r3, [r7, #20]
 8000460:	e00a      	b.n	8000478 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000462:	f3af 8000 	nop.w
 8000466:	4601      	mov	r1, r0
 8000468:	68bb      	ldr	r3, [r7, #8]
 800046a:	1c5a      	adds	r2, r3, #1
 800046c:	60ba      	str	r2, [r7, #8]
 800046e:	b2ca      	uxtb	r2, r1
 8000470:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000472:	697b      	ldr	r3, [r7, #20]
 8000474:	3301      	adds	r3, #1
 8000476:	617b      	str	r3, [r7, #20]
 8000478:	697a      	ldr	r2, [r7, #20]
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	429a      	cmp	r2, r3
 800047e:	dbf0      	blt.n	8000462 <_read+0x12>
	}

return len;
 8000480:	687b      	ldr	r3, [r7, #4]
}
 8000482:	4618      	mov	r0, r3
 8000484:	3718      	adds	r7, #24
 8000486:	46bd      	mov	sp, r7
 8000488:	bd80      	pop	{r7, pc}

0800048a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800048a:	b580      	push	{r7, lr}
 800048c:	b086      	sub	sp, #24
 800048e:	af00      	add	r7, sp, #0
 8000490:	60f8      	str	r0, [r7, #12]
 8000492:	60b9      	str	r1, [r7, #8]
 8000494:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000496:	2300      	movs	r3, #0
 8000498:	617b      	str	r3, [r7, #20]
 800049a:	e009      	b.n	80004b0 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800049c:	68bb      	ldr	r3, [r7, #8]
 800049e:	1c5a      	adds	r2, r3, #1
 80004a0:	60ba      	str	r2, [r7, #8]
 80004a2:	781b      	ldrb	r3, [r3, #0]
 80004a4:	4618      	mov	r0, r3
 80004a6:	f7ff fee3 	bl	8000270 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004aa:	697b      	ldr	r3, [r7, #20]
 80004ac:	3301      	adds	r3, #1
 80004ae:	617b      	str	r3, [r7, #20]
 80004b0:	697a      	ldr	r2, [r7, #20]
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	429a      	cmp	r2, r3
 80004b6:	dbf1      	blt.n	800049c <_write+0x12>
	}
	return len;
 80004b8:	687b      	ldr	r3, [r7, #4]
}
 80004ba:	4618      	mov	r0, r3
 80004bc:	3718      	adds	r7, #24
 80004be:	46bd      	mov	sp, r7
 80004c0:	bd80      	pop	{r7, pc}

080004c2 <_close>:

int _close(int file)
{
 80004c2:	b480      	push	{r7}
 80004c4:	b083      	sub	sp, #12
 80004c6:	af00      	add	r7, sp, #0
 80004c8:	6078      	str	r0, [r7, #4]
	return -1;
 80004ca:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80004ce:	4618      	mov	r0, r3
 80004d0:	370c      	adds	r7, #12
 80004d2:	46bd      	mov	sp, r7
 80004d4:	bc80      	pop	{r7}
 80004d6:	4770      	bx	lr

080004d8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004d8:	b480      	push	{r7}
 80004da:	b083      	sub	sp, #12
 80004dc:	af00      	add	r7, sp, #0
 80004de:	6078      	str	r0, [r7, #4]
 80004e0:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004e2:	683b      	ldr	r3, [r7, #0]
 80004e4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80004e8:	605a      	str	r2, [r3, #4]
	return 0;
 80004ea:	2300      	movs	r3, #0
}
 80004ec:	4618      	mov	r0, r3
 80004ee:	370c      	adds	r7, #12
 80004f0:	46bd      	mov	sp, r7
 80004f2:	bc80      	pop	{r7}
 80004f4:	4770      	bx	lr

080004f6 <_isatty>:

int _isatty(int file)
{
 80004f6:	b480      	push	{r7}
 80004f8:	b083      	sub	sp, #12
 80004fa:	af00      	add	r7, sp, #0
 80004fc:	6078      	str	r0, [r7, #4]
	return 1;
 80004fe:	2301      	movs	r3, #1
}
 8000500:	4618      	mov	r0, r3
 8000502:	370c      	adds	r7, #12
 8000504:	46bd      	mov	sp, r7
 8000506:	bc80      	pop	{r7}
 8000508:	4770      	bx	lr

0800050a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800050a:	b480      	push	{r7}
 800050c:	b085      	sub	sp, #20
 800050e:	af00      	add	r7, sp, #0
 8000510:	60f8      	str	r0, [r7, #12]
 8000512:	60b9      	str	r1, [r7, #8]
 8000514:	607a      	str	r2, [r7, #4]
	return 0;
 8000516:	2300      	movs	r3, #0
}
 8000518:	4618      	mov	r0, r3
 800051a:	3714      	adds	r7, #20
 800051c:	46bd      	mov	sp, r7
 800051e:	bc80      	pop	{r7}
 8000520:	4770      	bx	lr
	...

08000524 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000524:	b580      	push	{r7, lr}
 8000526:	b086      	sub	sp, #24
 8000528:	af00      	add	r7, sp, #0
 800052a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800052c:	4a14      	ldr	r2, [pc, #80]	@ (8000580 <_sbrk+0x5c>)
 800052e:	4b15      	ldr	r3, [pc, #84]	@ (8000584 <_sbrk+0x60>)
 8000530:	1ad3      	subs	r3, r2, r3
 8000532:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000534:	697b      	ldr	r3, [r7, #20]
 8000536:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000538:	4b13      	ldr	r3, [pc, #76]	@ (8000588 <_sbrk+0x64>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	2b00      	cmp	r3, #0
 800053e:	d102      	bne.n	8000546 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000540:	4b11      	ldr	r3, [pc, #68]	@ (8000588 <_sbrk+0x64>)
 8000542:	4a12      	ldr	r2, [pc, #72]	@ (800058c <_sbrk+0x68>)
 8000544:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000546:	4b10      	ldr	r3, [pc, #64]	@ (8000588 <_sbrk+0x64>)
 8000548:	681a      	ldr	r2, [r3, #0]
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	4413      	add	r3, r2
 800054e:	693a      	ldr	r2, [r7, #16]
 8000550:	429a      	cmp	r2, r3
 8000552:	d207      	bcs.n	8000564 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000554:	f000 fabe 	bl	8000ad4 <__errno>
 8000558:	4603      	mov	r3, r0
 800055a:	220c      	movs	r2, #12
 800055c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800055e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000562:	e009      	b.n	8000578 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000564:	4b08      	ldr	r3, [pc, #32]	@ (8000588 <_sbrk+0x64>)
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800056a:	4b07      	ldr	r3, [pc, #28]	@ (8000588 <_sbrk+0x64>)
 800056c:	681a      	ldr	r2, [r3, #0]
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	4413      	add	r3, r2
 8000572:	4a05      	ldr	r2, [pc, #20]	@ (8000588 <_sbrk+0x64>)
 8000574:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000576:	68fb      	ldr	r3, [r7, #12]
}
 8000578:	4618      	mov	r0, r3
 800057a:	3718      	adds	r7, #24
 800057c:	46bd      	mov	sp, r7
 800057e:	bd80      	pop	{r7, pc}
 8000580:	20020000 	.word	0x20020000
 8000584:	00000400 	.word	0x00000400
 8000588:	20000078 	.word	0x20000078
 800058c:	200001c8 	.word	0x200001c8

08000590 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000590:	b580      	push	{r7, lr}
 8000592:	af00      	add	r7, sp, #0
  DWT_Init();
 8000594:	f000 f802 	bl	800059c <DWT_Init>
}
 8000598:	bf00      	nop
 800059a:	bd80      	pop	{r7, pc}

0800059c <DWT_Init>:
}
#pragma GCC pop_options


uint32_t DWT_Init(void)
{
 800059c:	b480      	push	{r7}
 800059e:	af00      	add	r7, sp, #0
    /* Disable TRC */
    CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk; // ~0x01000000;
 80005a0:	4b14      	ldr	r3, [pc, #80]	@ (80005f4 <DWT_Init+0x58>)
 80005a2:	68db      	ldr	r3, [r3, #12]
 80005a4:	4a13      	ldr	r2, [pc, #76]	@ (80005f4 <DWT_Init+0x58>)
 80005a6:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80005aa:	60d3      	str	r3, [r2, #12]
    /* Enable TRC */
    CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
 80005ac:	4b11      	ldr	r3, [pc, #68]	@ (80005f4 <DWT_Init+0x58>)
 80005ae:	68db      	ldr	r3, [r3, #12]
 80005b0:	4a10      	ldr	r2, [pc, #64]	@ (80005f4 <DWT_Init+0x58>)
 80005b2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80005b6:	60d3      	str	r3, [r2, #12]
    /* Disable clock cycle counter */
    DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 80005b8:	4b0f      	ldr	r3, [pc, #60]	@ (80005f8 <DWT_Init+0x5c>)
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	4a0e      	ldr	r2, [pc, #56]	@ (80005f8 <DWT_Init+0x5c>)
 80005be:	f023 0301 	bic.w	r3, r3, #1
 80005c2:	6013      	str	r3, [r2, #0]
    /* Enable  clock cycle counter */
    DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 80005c4:	4b0c      	ldr	r3, [pc, #48]	@ (80005f8 <DWT_Init+0x5c>)
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	4a0b      	ldr	r2, [pc, #44]	@ (80005f8 <DWT_Init+0x5c>)
 80005ca:	f043 0301 	orr.w	r3, r3, #1
 80005ce:	6013      	str	r3, [r2, #0]
    /* Reset the clock cycle counter value */
    DWT->CYCCNT = 0;
 80005d0:	4b09      	ldr	r3, [pc, #36]	@ (80005f8 <DWT_Init+0x5c>)
 80005d2:	2200      	movs	r2, #0
 80005d4:	605a      	str	r2, [r3, #4]
    /* 3 NO OPERATION instructions */
    __ASM volatile ("NOP");
 80005d6:	bf00      	nop
    __ASM volatile ("NOP");
 80005d8:	bf00      	nop
    __ASM volatile ("NOP");
 80005da:	bf00      	nop
    /* Check if clock cycle counter has started: 0 on success */
    return !(DWT->CYCCNT);
 80005dc:	4b06      	ldr	r3, [pc, #24]	@ (80005f8 <DWT_Init+0x5c>)
 80005de:	685b      	ldr	r3, [r3, #4]
 80005e0:	2b00      	cmp	r3, #0
 80005e2:	bf0c      	ite	eq
 80005e4:	2301      	moveq	r3, #1
 80005e6:	2300      	movne	r3, #0
 80005e8:	b2db      	uxtb	r3, r3
}
 80005ea:	4618      	mov	r0, r3
 80005ec:	46bd      	mov	sp, r7
 80005ee:	bc80      	pop	{r7}
 80005f0:	4770      	bx	lr
 80005f2:	bf00      	nop
 80005f4:	e000edf0 	.word	0xe000edf0
 80005f8:	e0001000 	.word	0xe0001000

080005fc <UartInit>:

#define TX_PIN	2
#define RX_PIN	3
#define USART_ALT_FN	7

void UartInit(uint32_t baud) {
 80005fc:	b480      	push	{r7}
 80005fe:	b083      	sub	sp, #12
 8000600:	af00      	add	r7, sp, #0
 8000602:	6078      	str	r0, [r7, #4]

	RCC->AHB1ENR |= BV(RCC_AHB1ENR_GPIOAEN_Pos);
 8000604:	4b31      	ldr	r3, [pc, #196]	@ (80006cc <UartInit+0xd0>)
 8000606:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000608:	4a30      	ldr	r2, [pc, #192]	@ (80006cc <UartInit+0xd0>)
 800060a:	f043 0301 	orr.w	r3, r3, #1
 800060e:	6313      	str	r3, [r2, #48]	@ 0x30

	GPIOA->AFR[0] |= ((USART_ALT_FN << GPIO_AFRL_AFSEL3_Pos) | (USART_ALT_FN << GPIO_AFRL_AFSEL2_Pos));
 8000610:	4b2f      	ldr	r3, [pc, #188]	@ (80006d0 <UartInit+0xd4>)
 8000612:	6a1b      	ldr	r3, [r3, #32]
 8000614:	4a2e      	ldr	r2, [pc, #184]	@ (80006d0 <UartInit+0xd4>)
 8000616:	f443 43ee 	orr.w	r3, r3, #30464	@ 0x7700
 800061a:	6213      	str	r3, [r2, #32]

	GPIOA->MODER |= (BV(TX_PIN * 2 + 1) | BV(RX_PIN * 2 + 1));
 800061c:	4b2c      	ldr	r3, [pc, #176]	@ (80006d0 <UartInit+0xd4>)
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	4a2b      	ldr	r2, [pc, #172]	@ (80006d0 <UartInit+0xd4>)
 8000622:	f043 03a0 	orr.w	r3, r3, #160	@ 0xa0
 8000626:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(BV(TX_PIN * 2) | BV(RX_PIN * 2));
 8000628:	4b29      	ldr	r3, [pc, #164]	@ (80006d0 <UartInit+0xd4>)
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	4a28      	ldr	r2, [pc, #160]	@ (80006d0 <UartInit+0xd4>)
 800062e:	f023 0350 	bic.w	r3, r3, #80	@ 0x50
 8000632:	6013      	str	r3, [r2, #0]
	GPIOA->OSPEEDR &= ~(BV(TX_PIN * 2) | BV(TX_PIN * 2 + 1) | BV(RX_PIN * 2) | BV(RX_PIN * 2 + 1));
 8000634:	4b26      	ldr	r3, [pc, #152]	@ (80006d0 <UartInit+0xd4>)
 8000636:	689b      	ldr	r3, [r3, #8]
 8000638:	4a25      	ldr	r2, [pc, #148]	@ (80006d0 <UartInit+0xd4>)
 800063a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800063e:	6093      	str	r3, [r2, #8]
	GPIOA->PUPDR &= ~(BV(TX_PIN * 2) | BV(TX_PIN * 2 + 1) | BV(RX_PIN * 2) | BV(RX_PIN * 2 + 1));
 8000640:	4b23      	ldr	r3, [pc, #140]	@ (80006d0 <UartInit+0xd4>)
 8000642:	68db      	ldr	r3, [r3, #12]
 8000644:	4a22      	ldr	r2, [pc, #136]	@ (80006d0 <UartInit+0xd4>)
 8000646:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800064a:	60d3      	str	r3, [r2, #12]
	GPIOA->OTYPER &= ~(BV(TX_PIN) | BV(RX_PIN));
 800064c:	4b20      	ldr	r3, [pc, #128]	@ (80006d0 <UartInit+0xd4>)
 800064e:	685b      	ldr	r3, [r3, #4]
 8000650:	4a1f      	ldr	r2, [pc, #124]	@ (80006d0 <UartInit+0xd4>)
 8000652:	f023 030c 	bic.w	r3, r3, #12
 8000656:	6053      	str	r3, [r2, #4]


	RCC->APB1ENR |= BV(RCC_APB1ENR_USART2EN_Pos);
 8000658:	4b1c      	ldr	r3, [pc, #112]	@ (80006cc <UartInit+0xd0>)
 800065a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800065c:	4a1b      	ldr	r2, [pc, #108]	@ (80006cc <UartInit+0xd0>)
 800065e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000662:	6413      	str	r3, [r2, #64]	@ 0x40

	USART2->CR1 = BV(USART_CR1_TE_Pos) | BV(USART_CR1_RE_Pos);
 8000664:	4b1b      	ldr	r3, [pc, #108]	@ (80006d4 <UartInit+0xd8>)
 8000666:	220c      	movs	r2, #12
 8000668:	60da      	str	r2, [r3, #12]

	USART2->CR2 = 0x00000000;
 800066a:	4b1a      	ldr	r3, [pc, #104]	@ (80006d4 <UartInit+0xd8>)
 800066c:	2200      	movs	r2, #0
 800066e:	611a      	str	r2, [r3, #16]

	USART2->CR3 = 0x00000000;
 8000670:	4b18      	ldr	r3, [pc, #96]	@ (80006d4 <UartInit+0xd8>)
 8000672:	2200      	movs	r2, #0
 8000674:	615a      	str	r2, [r3, #20]

	switch(baud) {
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	f5b3 3fe1 	cmp.w	r3, #115200	@ 0x1c200
 800067c:	d016      	beq.n	80006ac <UartInit+0xb0>
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	f5b3 3fe1 	cmp.w	r3, #115200	@ 0x1c200
 8000684:	d816      	bhi.n	80006b4 <UartInit+0xb8>
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	f5b3 5f16 	cmp.w	r3, #9600	@ 0x2580
 800068c:	d004      	beq.n	8000698 <UartInit+0x9c>
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	f5b3 4f16 	cmp.w	r3, #38400	@ 0x9600
 8000694:	d005      	beq.n	80006a2 <UartInit+0xa6>
 8000696:	e00d      	b.n	80006b4 <UartInit+0xb8>
		case BAUD_9600:
			USART2->BRR = BAUD_BRR_9600;
 8000698:	4b0e      	ldr	r3, [pc, #56]	@ (80006d4 <UartInit+0xd8>)
 800069a:	f240 6283 	movw	r2, #1667	@ 0x683
 800069e:	609a      	str	r2, [r3, #8]
			break;
 80006a0:	e008      	b.n	80006b4 <UartInit+0xb8>
		case BAUD_38400:
			USART2->BRR = BAUD_BRR_38400;
 80006a2:	4b0c      	ldr	r3, [pc, #48]	@ (80006d4 <UartInit+0xd8>)
 80006a4:	f240 12a1 	movw	r2, #417	@ 0x1a1
 80006a8:	609a      	str	r2, [r3, #8]
			break;
 80006aa:	e003      	b.n	80006b4 <UartInit+0xb8>
		case BAUD_115200:
			USART2->BRR = BAUD_BRR_115200;
 80006ac:	4b09      	ldr	r3, [pc, #36]	@ (80006d4 <UartInit+0xd8>)
 80006ae:	228b      	movs	r2, #139	@ 0x8b
 80006b0:	609a      	str	r2, [r3, #8]
			break;
 80006b2:	bf00      	nop
	}

	USART2->CR1 |= BV(USART_CR1_UE_Pos);
 80006b4:	4b07      	ldr	r3, [pc, #28]	@ (80006d4 <UartInit+0xd8>)
 80006b6:	68db      	ldr	r3, [r3, #12]
 80006b8:	4a06      	ldr	r2, [pc, #24]	@ (80006d4 <UartInit+0xd8>)
 80006ba:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80006be:	60d3      	str	r3, [r2, #12]
}
 80006c0:	bf00      	nop
 80006c2:	370c      	adds	r7, #12
 80006c4:	46bd      	mov	sp, r7
 80006c6:	bc80      	pop	{r7}
 80006c8:	4770      	bx	lr
 80006ca:	bf00      	nop
 80006cc:	40023800 	.word	0x40023800
 80006d0:	40020000 	.word	0x40020000
 80006d4:	40004400 	.word	0x40004400

080006d8 <UartPutch>:

void UartPutch(uint8_t ch) {
 80006d8:	b480      	push	{r7}
 80006da:	b083      	sub	sp, #12
 80006dc:	af00      	add	r7, sp, #0
 80006de:	4603      	mov	r3, r0
 80006e0:	71fb      	strb	r3, [r7, #7]

	while((USART2->SR & BV(USART_SR_TXE_Pos)) == 0)
 80006e2:	bf00      	nop
 80006e4:	4b06      	ldr	r3, [pc, #24]	@ (8000700 <UartPutch+0x28>)
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80006ec:	2b00      	cmp	r3, #0
 80006ee:	d0f9      	beq.n	80006e4 <UartPutch+0xc>
		;

	USART2->DR = ch;
 80006f0:	4a03      	ldr	r2, [pc, #12]	@ (8000700 <UartPutch+0x28>)
 80006f2:	79fb      	ldrb	r3, [r7, #7]
 80006f4:	6053      	str	r3, [r2, #4]
}
 80006f6:	bf00      	nop
 80006f8:	370c      	adds	r7, #12
 80006fa:	46bd      	mov	sp, r7
 80006fc:	bc80      	pop	{r7}
 80006fe:	4770      	bx	lr
 8000700:	40004400 	.word	0x40004400

08000704 <UartGetch>:

uint8_t UartGetch(void) {
 8000704:	b480      	push	{r7}
 8000706:	b083      	sub	sp, #12
 8000708:	af00      	add	r7, sp, #0

	while((USART2->SR & BV(USART_SR_RXNE_Pos)) == 0)
 800070a:	bf00      	nop
 800070c:	4b07      	ldr	r3, [pc, #28]	@ (800072c <UartGetch+0x28>)
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	f003 0320 	and.w	r3, r3, #32
 8000714:	2b00      	cmp	r3, #0
 8000716:	d0f9      	beq.n	800070c <UartGetch+0x8>
		;

	char ch = USART2->DR;
 8000718:	4b04      	ldr	r3, [pc, #16]	@ (800072c <UartGetch+0x28>)
 800071a:	685b      	ldr	r3, [r3, #4]
 800071c:	71fb      	strb	r3, [r7, #7]
	return ch;
 800071e:	79fb      	ldrb	r3, [r7, #7]
}
 8000720:	4618      	mov	r0, r3
 8000722:	370c      	adds	r7, #12
 8000724:	46bd      	mov	sp, r7
 8000726:	bc80      	pop	{r7}
 8000728:	4770      	bx	lr
 800072a:	bf00      	nop
 800072c:	40004400 	.word	0x40004400

08000730 <UartPuts>:

void UartPuts(char str[]) {
 8000730:	b580      	push	{r7, lr}
 8000732:	b084      	sub	sp, #16
 8000734:	af00      	add	r7, sp, #0
 8000736:	6078      	str	r0, [r7, #4]
	int i;
	for(i=0; str[i]!='\0'; i++)
 8000738:	2300      	movs	r3, #0
 800073a:	60fb      	str	r3, [r7, #12]
 800073c:	e009      	b.n	8000752 <UartPuts+0x22>
		UartPutch(str[i]);
 800073e:	68fb      	ldr	r3, [r7, #12]
 8000740:	687a      	ldr	r2, [r7, #4]
 8000742:	4413      	add	r3, r2
 8000744:	781b      	ldrb	r3, [r3, #0]
 8000746:	4618      	mov	r0, r3
 8000748:	f7ff ffc6 	bl	80006d8 <UartPutch>
	for(i=0; str[i]!='\0'; i++)
 800074c:	68fb      	ldr	r3, [r7, #12]
 800074e:	3301      	adds	r3, #1
 8000750:	60fb      	str	r3, [r7, #12]
 8000752:	68fb      	ldr	r3, [r7, #12]
 8000754:	687a      	ldr	r2, [r7, #4]
 8000756:	4413      	add	r3, r2
 8000758:	781b      	ldrb	r3, [r3, #0]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d1ef      	bne.n	800073e <UartPuts+0xe>
}
 800075e:	bf00      	nop
 8000760:	bf00      	nop
 8000762:	3710      	adds	r7, #16
 8000764:	46bd      	mov	sp, r7
 8000766:	bd80      	pop	{r7, pc}

08000768 <UartGets>:

void UartGets(char str[]) {
 8000768:	b580      	push	{r7, lr}
 800076a:	b084      	sub	sp, #16
 800076c:	af00      	add	r7, sp, #0
 800076e:	6078      	str	r0, [r7, #4]
	int i=0;
 8000770:	2300      	movs	r3, #0
 8000772:	60fb      	str	r3, [r7, #12]
	char ch;
	do {
		ch = UartGetch();
 8000774:	f7ff ffc6 	bl	8000704 <UartGetch>
 8000778:	4603      	mov	r3, r0
 800077a:	72fb      	strb	r3, [r7, #11]
		str[i] = ch;
 800077c:	68fb      	ldr	r3, [r7, #12]
 800077e:	687a      	ldr	r2, [r7, #4]
 8000780:	4413      	add	r3, r2
 8000782:	7afa      	ldrb	r2, [r7, #11]
 8000784:	701a      	strb	r2, [r3, #0]
		i++;
 8000786:	68fb      	ldr	r3, [r7, #12]
 8000788:	3301      	adds	r3, #1
 800078a:	60fb      	str	r3, [r7, #12]
	} while(ch != '\r');
 800078c:	7afb      	ldrb	r3, [r7, #11]
 800078e:	2b0d      	cmp	r3, #13
 8000790:	d1f0      	bne.n	8000774 <UartGets+0xc>
	str[i] = '\n';
 8000792:	68fb      	ldr	r3, [r7, #12]
 8000794:	687a      	ldr	r2, [r7, #4]
 8000796:	4413      	add	r3, r2
 8000798:	220a      	movs	r2, #10
 800079a:	701a      	strb	r2, [r3, #0]
	i++;
 800079c:	68fb      	ldr	r3, [r7, #12]
 800079e:	3301      	adds	r3, #1
 80007a0:	60fb      	str	r3, [r7, #12]
	str[i] = '\0';
 80007a2:	68fb      	ldr	r3, [r7, #12]
 80007a4:	687a      	ldr	r2, [r7, #4]
 80007a6:	4413      	add	r3, r2
 80007a8:	2200      	movs	r2, #0
 80007aa:	701a      	strb	r2, [r3, #0]
}
 80007ac:	bf00      	nop
 80007ae:	3710      	adds	r7, #16
 80007b0:	46bd      	mov	sp, r7
 80007b2:	bd80      	pop	{r7, pc}

080007b4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007b4:	480d      	ldr	r0, [pc, #52]	@ (80007ec <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007b6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80007b8:	f7ff feea 	bl	8000590 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007bc:	480c      	ldr	r0, [pc, #48]	@ (80007f0 <LoopForever+0x6>)
  ldr r1, =_edata
 80007be:	490d      	ldr	r1, [pc, #52]	@ (80007f4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007c0:	4a0d      	ldr	r2, [pc, #52]	@ (80007f8 <LoopForever+0xe>)
  movs r3, #0
 80007c2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007c4:	e002      	b.n	80007cc <LoopCopyDataInit>

080007c6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007c6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007c8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007ca:	3304      	adds	r3, #4

080007cc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007cc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007ce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007d0:	d3f9      	bcc.n	80007c6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007d2:	4a0a      	ldr	r2, [pc, #40]	@ (80007fc <LoopForever+0x12>)
  ldr r4, =_ebss
 80007d4:	4c0a      	ldr	r4, [pc, #40]	@ (8000800 <LoopForever+0x16>)
  movs r3, #0
 80007d6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007d8:	e001      	b.n	80007de <LoopFillZerobss>

080007da <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007da:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007dc:	3204      	adds	r2, #4

080007de <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007de:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007e0:	d3fb      	bcc.n	80007da <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007e2:	f000 f97d 	bl	8000ae0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007e6:	f7ff fdef 	bl	80003c8 <main>

080007ea <LoopForever>:

LoopForever:
  b LoopForever
 80007ea:	e7fe      	b.n	80007ea <LoopForever>
  ldr   r0, =_estack
 80007ec:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80007f0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007f4:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80007f8:	08001c74 	.word	0x08001c74
  ldr r2, =_sbss
 80007fc:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000800:	200001c8 	.word	0x200001c8

08000804 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000804:	e7fe      	b.n	8000804 <ADC_IRQHandler>
	...

08000808 <std>:
 8000808:	2300      	movs	r3, #0
 800080a:	b510      	push	{r4, lr}
 800080c:	4604      	mov	r4, r0
 800080e:	e9c0 3300 	strd	r3, r3, [r0]
 8000812:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000816:	6083      	str	r3, [r0, #8]
 8000818:	8181      	strh	r1, [r0, #12]
 800081a:	6643      	str	r3, [r0, #100]	@ 0x64
 800081c:	81c2      	strh	r2, [r0, #14]
 800081e:	6183      	str	r3, [r0, #24]
 8000820:	4619      	mov	r1, r3
 8000822:	2208      	movs	r2, #8
 8000824:	305c      	adds	r0, #92	@ 0x5c
 8000826:	f000 f906 	bl	8000a36 <memset>
 800082a:	4b0d      	ldr	r3, [pc, #52]	@ (8000860 <std+0x58>)
 800082c:	6263      	str	r3, [r4, #36]	@ 0x24
 800082e:	4b0d      	ldr	r3, [pc, #52]	@ (8000864 <std+0x5c>)
 8000830:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000832:	4b0d      	ldr	r3, [pc, #52]	@ (8000868 <std+0x60>)
 8000834:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000836:	4b0d      	ldr	r3, [pc, #52]	@ (800086c <std+0x64>)
 8000838:	6323      	str	r3, [r4, #48]	@ 0x30
 800083a:	4b0d      	ldr	r3, [pc, #52]	@ (8000870 <std+0x68>)
 800083c:	6224      	str	r4, [r4, #32]
 800083e:	429c      	cmp	r4, r3
 8000840:	d006      	beq.n	8000850 <std+0x48>
 8000842:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000846:	4294      	cmp	r4, r2
 8000848:	d002      	beq.n	8000850 <std+0x48>
 800084a:	33d0      	adds	r3, #208	@ 0xd0
 800084c:	429c      	cmp	r4, r3
 800084e:	d105      	bne.n	800085c <std+0x54>
 8000850:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000854:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000858:	f000 b966 	b.w	8000b28 <__retarget_lock_init_recursive>
 800085c:	bd10      	pop	{r4, pc}
 800085e:	bf00      	nop
 8000860:	080009b1 	.word	0x080009b1
 8000864:	080009d3 	.word	0x080009d3
 8000868:	08000a0b 	.word	0x08000a0b
 800086c:	08000a2f 	.word	0x08000a2f
 8000870:	2000007c 	.word	0x2000007c

08000874 <stdio_exit_handler>:
 8000874:	4a02      	ldr	r2, [pc, #8]	@ (8000880 <stdio_exit_handler+0xc>)
 8000876:	4903      	ldr	r1, [pc, #12]	@ (8000884 <stdio_exit_handler+0x10>)
 8000878:	4803      	ldr	r0, [pc, #12]	@ (8000888 <stdio_exit_handler+0x14>)
 800087a:	f000 b869 	b.w	8000950 <_fwalk_sglue>
 800087e:	bf00      	nop
 8000880:	20000000 	.word	0x20000000
 8000884:	0800141d 	.word	0x0800141d
 8000888:	20000010 	.word	0x20000010

0800088c <cleanup_stdio>:
 800088c:	6841      	ldr	r1, [r0, #4]
 800088e:	4b0c      	ldr	r3, [pc, #48]	@ (80008c0 <cleanup_stdio+0x34>)
 8000890:	4299      	cmp	r1, r3
 8000892:	b510      	push	{r4, lr}
 8000894:	4604      	mov	r4, r0
 8000896:	d001      	beq.n	800089c <cleanup_stdio+0x10>
 8000898:	f000 fdc0 	bl	800141c <_fflush_r>
 800089c:	68a1      	ldr	r1, [r4, #8]
 800089e:	4b09      	ldr	r3, [pc, #36]	@ (80008c4 <cleanup_stdio+0x38>)
 80008a0:	4299      	cmp	r1, r3
 80008a2:	d002      	beq.n	80008aa <cleanup_stdio+0x1e>
 80008a4:	4620      	mov	r0, r4
 80008a6:	f000 fdb9 	bl	800141c <_fflush_r>
 80008aa:	68e1      	ldr	r1, [r4, #12]
 80008ac:	4b06      	ldr	r3, [pc, #24]	@ (80008c8 <cleanup_stdio+0x3c>)
 80008ae:	4299      	cmp	r1, r3
 80008b0:	d004      	beq.n	80008bc <cleanup_stdio+0x30>
 80008b2:	4620      	mov	r0, r4
 80008b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008b8:	f000 bdb0 	b.w	800141c <_fflush_r>
 80008bc:	bd10      	pop	{r4, pc}
 80008be:	bf00      	nop
 80008c0:	2000007c 	.word	0x2000007c
 80008c4:	200000e4 	.word	0x200000e4
 80008c8:	2000014c 	.word	0x2000014c

080008cc <global_stdio_init.part.0>:
 80008cc:	b510      	push	{r4, lr}
 80008ce:	4b0b      	ldr	r3, [pc, #44]	@ (80008fc <global_stdio_init.part.0+0x30>)
 80008d0:	4c0b      	ldr	r4, [pc, #44]	@ (8000900 <global_stdio_init.part.0+0x34>)
 80008d2:	4a0c      	ldr	r2, [pc, #48]	@ (8000904 <global_stdio_init.part.0+0x38>)
 80008d4:	601a      	str	r2, [r3, #0]
 80008d6:	4620      	mov	r0, r4
 80008d8:	2200      	movs	r2, #0
 80008da:	2104      	movs	r1, #4
 80008dc:	f7ff ff94 	bl	8000808 <std>
 80008e0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80008e4:	2201      	movs	r2, #1
 80008e6:	2109      	movs	r1, #9
 80008e8:	f7ff ff8e 	bl	8000808 <std>
 80008ec:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80008f0:	2202      	movs	r2, #2
 80008f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008f6:	2112      	movs	r1, #18
 80008f8:	f7ff bf86 	b.w	8000808 <std>
 80008fc:	200001b4 	.word	0x200001b4
 8000900:	2000007c 	.word	0x2000007c
 8000904:	08000875 	.word	0x08000875

08000908 <__sfp_lock_acquire>:
 8000908:	4801      	ldr	r0, [pc, #4]	@ (8000910 <__sfp_lock_acquire+0x8>)
 800090a:	f000 b90e 	b.w	8000b2a <__retarget_lock_acquire_recursive>
 800090e:	bf00      	nop
 8000910:	200001bd 	.word	0x200001bd

08000914 <__sfp_lock_release>:
 8000914:	4801      	ldr	r0, [pc, #4]	@ (800091c <__sfp_lock_release+0x8>)
 8000916:	f000 b909 	b.w	8000b2c <__retarget_lock_release_recursive>
 800091a:	bf00      	nop
 800091c:	200001bd 	.word	0x200001bd

08000920 <__sinit>:
 8000920:	b510      	push	{r4, lr}
 8000922:	4604      	mov	r4, r0
 8000924:	f7ff fff0 	bl	8000908 <__sfp_lock_acquire>
 8000928:	6a23      	ldr	r3, [r4, #32]
 800092a:	b11b      	cbz	r3, 8000934 <__sinit+0x14>
 800092c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000930:	f7ff bff0 	b.w	8000914 <__sfp_lock_release>
 8000934:	4b04      	ldr	r3, [pc, #16]	@ (8000948 <__sinit+0x28>)
 8000936:	6223      	str	r3, [r4, #32]
 8000938:	4b04      	ldr	r3, [pc, #16]	@ (800094c <__sinit+0x2c>)
 800093a:	681b      	ldr	r3, [r3, #0]
 800093c:	2b00      	cmp	r3, #0
 800093e:	d1f5      	bne.n	800092c <__sinit+0xc>
 8000940:	f7ff ffc4 	bl	80008cc <global_stdio_init.part.0>
 8000944:	e7f2      	b.n	800092c <__sinit+0xc>
 8000946:	bf00      	nop
 8000948:	0800088d 	.word	0x0800088d
 800094c:	200001b4 	.word	0x200001b4

08000950 <_fwalk_sglue>:
 8000950:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000954:	4607      	mov	r7, r0
 8000956:	4688      	mov	r8, r1
 8000958:	4614      	mov	r4, r2
 800095a:	2600      	movs	r6, #0
 800095c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000960:	f1b9 0901 	subs.w	r9, r9, #1
 8000964:	d505      	bpl.n	8000972 <_fwalk_sglue+0x22>
 8000966:	6824      	ldr	r4, [r4, #0]
 8000968:	2c00      	cmp	r4, #0
 800096a:	d1f7      	bne.n	800095c <_fwalk_sglue+0xc>
 800096c:	4630      	mov	r0, r6
 800096e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000972:	89ab      	ldrh	r3, [r5, #12]
 8000974:	2b01      	cmp	r3, #1
 8000976:	d907      	bls.n	8000988 <_fwalk_sglue+0x38>
 8000978:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800097c:	3301      	adds	r3, #1
 800097e:	d003      	beq.n	8000988 <_fwalk_sglue+0x38>
 8000980:	4629      	mov	r1, r5
 8000982:	4638      	mov	r0, r7
 8000984:	47c0      	blx	r8
 8000986:	4306      	orrs	r6, r0
 8000988:	3568      	adds	r5, #104	@ 0x68
 800098a:	e7e9      	b.n	8000960 <_fwalk_sglue+0x10>

0800098c <iscanf>:
 800098c:	b40f      	push	{r0, r1, r2, r3}
 800098e:	b507      	push	{r0, r1, r2, lr}
 8000990:	4906      	ldr	r1, [pc, #24]	@ (80009ac <iscanf+0x20>)
 8000992:	ab04      	add	r3, sp, #16
 8000994:	6808      	ldr	r0, [r1, #0]
 8000996:	f853 2b04 	ldr.w	r2, [r3], #4
 800099a:	6841      	ldr	r1, [r0, #4]
 800099c:	9301      	str	r3, [sp, #4]
 800099e:	f000 fb5b 	bl	8001058 <_vfiscanf_r>
 80009a2:	b003      	add	sp, #12
 80009a4:	f85d eb04 	ldr.w	lr, [sp], #4
 80009a8:	b004      	add	sp, #16
 80009aa:	4770      	bx	lr
 80009ac:	2000000c 	.word	0x2000000c

080009b0 <__sread>:
 80009b0:	b510      	push	{r4, lr}
 80009b2:	460c      	mov	r4, r1
 80009b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80009b8:	f000 f868 	bl	8000a8c <_read_r>
 80009bc:	2800      	cmp	r0, #0
 80009be:	bfab      	itete	ge
 80009c0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80009c2:	89a3      	ldrhlt	r3, [r4, #12]
 80009c4:	181b      	addge	r3, r3, r0
 80009c6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80009ca:	bfac      	ite	ge
 80009cc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80009ce:	81a3      	strhlt	r3, [r4, #12]
 80009d0:	bd10      	pop	{r4, pc}

080009d2 <__swrite>:
 80009d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80009d6:	461f      	mov	r7, r3
 80009d8:	898b      	ldrh	r3, [r1, #12]
 80009da:	05db      	lsls	r3, r3, #23
 80009dc:	4605      	mov	r5, r0
 80009de:	460c      	mov	r4, r1
 80009e0:	4616      	mov	r6, r2
 80009e2:	d505      	bpl.n	80009f0 <__swrite+0x1e>
 80009e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80009e8:	2302      	movs	r3, #2
 80009ea:	2200      	movs	r2, #0
 80009ec:	f000 f83c 	bl	8000a68 <_lseek_r>
 80009f0:	89a3      	ldrh	r3, [r4, #12]
 80009f2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80009f6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80009fa:	81a3      	strh	r3, [r4, #12]
 80009fc:	4632      	mov	r2, r6
 80009fe:	463b      	mov	r3, r7
 8000a00:	4628      	mov	r0, r5
 8000a02:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000a06:	f000 b853 	b.w	8000ab0 <_write_r>

08000a0a <__sseek>:
 8000a0a:	b510      	push	{r4, lr}
 8000a0c:	460c      	mov	r4, r1
 8000a0e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a12:	f000 f829 	bl	8000a68 <_lseek_r>
 8000a16:	1c43      	adds	r3, r0, #1
 8000a18:	89a3      	ldrh	r3, [r4, #12]
 8000a1a:	bf15      	itete	ne
 8000a1c:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000a1e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000a22:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000a26:	81a3      	strheq	r3, [r4, #12]
 8000a28:	bf18      	it	ne
 8000a2a:	81a3      	strhne	r3, [r4, #12]
 8000a2c:	bd10      	pop	{r4, pc}

08000a2e <__sclose>:
 8000a2e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a32:	f000 b809 	b.w	8000a48 <_close_r>

08000a36 <memset>:
 8000a36:	4402      	add	r2, r0
 8000a38:	4603      	mov	r3, r0
 8000a3a:	4293      	cmp	r3, r2
 8000a3c:	d100      	bne.n	8000a40 <memset+0xa>
 8000a3e:	4770      	bx	lr
 8000a40:	f803 1b01 	strb.w	r1, [r3], #1
 8000a44:	e7f9      	b.n	8000a3a <memset+0x4>
	...

08000a48 <_close_r>:
 8000a48:	b538      	push	{r3, r4, r5, lr}
 8000a4a:	4d06      	ldr	r5, [pc, #24]	@ (8000a64 <_close_r+0x1c>)
 8000a4c:	2300      	movs	r3, #0
 8000a4e:	4604      	mov	r4, r0
 8000a50:	4608      	mov	r0, r1
 8000a52:	602b      	str	r3, [r5, #0]
 8000a54:	f7ff fd35 	bl	80004c2 <_close>
 8000a58:	1c43      	adds	r3, r0, #1
 8000a5a:	d102      	bne.n	8000a62 <_close_r+0x1a>
 8000a5c:	682b      	ldr	r3, [r5, #0]
 8000a5e:	b103      	cbz	r3, 8000a62 <_close_r+0x1a>
 8000a60:	6023      	str	r3, [r4, #0]
 8000a62:	bd38      	pop	{r3, r4, r5, pc}
 8000a64:	200001b8 	.word	0x200001b8

08000a68 <_lseek_r>:
 8000a68:	b538      	push	{r3, r4, r5, lr}
 8000a6a:	4d07      	ldr	r5, [pc, #28]	@ (8000a88 <_lseek_r+0x20>)
 8000a6c:	4604      	mov	r4, r0
 8000a6e:	4608      	mov	r0, r1
 8000a70:	4611      	mov	r1, r2
 8000a72:	2200      	movs	r2, #0
 8000a74:	602a      	str	r2, [r5, #0]
 8000a76:	461a      	mov	r2, r3
 8000a78:	f7ff fd47 	bl	800050a <_lseek>
 8000a7c:	1c43      	adds	r3, r0, #1
 8000a7e:	d102      	bne.n	8000a86 <_lseek_r+0x1e>
 8000a80:	682b      	ldr	r3, [r5, #0]
 8000a82:	b103      	cbz	r3, 8000a86 <_lseek_r+0x1e>
 8000a84:	6023      	str	r3, [r4, #0]
 8000a86:	bd38      	pop	{r3, r4, r5, pc}
 8000a88:	200001b8 	.word	0x200001b8

08000a8c <_read_r>:
 8000a8c:	b538      	push	{r3, r4, r5, lr}
 8000a8e:	4d07      	ldr	r5, [pc, #28]	@ (8000aac <_read_r+0x20>)
 8000a90:	4604      	mov	r4, r0
 8000a92:	4608      	mov	r0, r1
 8000a94:	4611      	mov	r1, r2
 8000a96:	2200      	movs	r2, #0
 8000a98:	602a      	str	r2, [r5, #0]
 8000a9a:	461a      	mov	r2, r3
 8000a9c:	f7ff fcd8 	bl	8000450 <_read>
 8000aa0:	1c43      	adds	r3, r0, #1
 8000aa2:	d102      	bne.n	8000aaa <_read_r+0x1e>
 8000aa4:	682b      	ldr	r3, [r5, #0]
 8000aa6:	b103      	cbz	r3, 8000aaa <_read_r+0x1e>
 8000aa8:	6023      	str	r3, [r4, #0]
 8000aaa:	bd38      	pop	{r3, r4, r5, pc}
 8000aac:	200001b8 	.word	0x200001b8

08000ab0 <_write_r>:
 8000ab0:	b538      	push	{r3, r4, r5, lr}
 8000ab2:	4d07      	ldr	r5, [pc, #28]	@ (8000ad0 <_write_r+0x20>)
 8000ab4:	4604      	mov	r4, r0
 8000ab6:	4608      	mov	r0, r1
 8000ab8:	4611      	mov	r1, r2
 8000aba:	2200      	movs	r2, #0
 8000abc:	602a      	str	r2, [r5, #0]
 8000abe:	461a      	mov	r2, r3
 8000ac0:	f7ff fce3 	bl	800048a <_write>
 8000ac4:	1c43      	adds	r3, r0, #1
 8000ac6:	d102      	bne.n	8000ace <_write_r+0x1e>
 8000ac8:	682b      	ldr	r3, [r5, #0]
 8000aca:	b103      	cbz	r3, 8000ace <_write_r+0x1e>
 8000acc:	6023      	str	r3, [r4, #0]
 8000ace:	bd38      	pop	{r3, r4, r5, pc}
 8000ad0:	200001b8 	.word	0x200001b8

08000ad4 <__errno>:
 8000ad4:	4b01      	ldr	r3, [pc, #4]	@ (8000adc <__errno+0x8>)
 8000ad6:	6818      	ldr	r0, [r3, #0]
 8000ad8:	4770      	bx	lr
 8000ada:	bf00      	nop
 8000adc:	2000000c 	.word	0x2000000c

08000ae0 <__libc_init_array>:
 8000ae0:	b570      	push	{r4, r5, r6, lr}
 8000ae2:	4d0d      	ldr	r5, [pc, #52]	@ (8000b18 <__libc_init_array+0x38>)
 8000ae4:	4c0d      	ldr	r4, [pc, #52]	@ (8000b1c <__libc_init_array+0x3c>)
 8000ae6:	1b64      	subs	r4, r4, r5
 8000ae8:	10a4      	asrs	r4, r4, #2
 8000aea:	2600      	movs	r6, #0
 8000aec:	42a6      	cmp	r6, r4
 8000aee:	d109      	bne.n	8000b04 <__libc_init_array+0x24>
 8000af0:	4d0b      	ldr	r5, [pc, #44]	@ (8000b20 <__libc_init_array+0x40>)
 8000af2:	4c0c      	ldr	r4, [pc, #48]	@ (8000b24 <__libc_init_array+0x44>)
 8000af4:	f000 fff2 	bl	8001adc <_init>
 8000af8:	1b64      	subs	r4, r4, r5
 8000afa:	10a4      	asrs	r4, r4, #2
 8000afc:	2600      	movs	r6, #0
 8000afe:	42a6      	cmp	r6, r4
 8000b00:	d105      	bne.n	8000b0e <__libc_init_array+0x2e>
 8000b02:	bd70      	pop	{r4, r5, r6, pc}
 8000b04:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b08:	4798      	blx	r3
 8000b0a:	3601      	adds	r6, #1
 8000b0c:	e7ee      	b.n	8000aec <__libc_init_array+0xc>
 8000b0e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b12:	4798      	blx	r3
 8000b14:	3601      	adds	r6, #1
 8000b16:	e7f2      	b.n	8000afe <__libc_init_array+0x1e>
 8000b18:	08001c6c 	.word	0x08001c6c
 8000b1c:	08001c6c 	.word	0x08001c6c
 8000b20:	08001c6c 	.word	0x08001c6c
 8000b24:	08001c70 	.word	0x08001c70

08000b28 <__retarget_lock_init_recursive>:
 8000b28:	4770      	bx	lr

08000b2a <__retarget_lock_acquire_recursive>:
 8000b2a:	4770      	bx	lr

08000b2c <__retarget_lock_release_recursive>:
 8000b2c:	4770      	bx	lr
	...

08000b30 <_free_r>:
 8000b30:	b538      	push	{r3, r4, r5, lr}
 8000b32:	4605      	mov	r5, r0
 8000b34:	2900      	cmp	r1, #0
 8000b36:	d041      	beq.n	8000bbc <_free_r+0x8c>
 8000b38:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000b3c:	1f0c      	subs	r4, r1, #4
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	bfb8      	it	lt
 8000b42:	18e4      	addlt	r4, r4, r3
 8000b44:	f000 f8e0 	bl	8000d08 <__malloc_lock>
 8000b48:	4a1d      	ldr	r2, [pc, #116]	@ (8000bc0 <_free_r+0x90>)
 8000b4a:	6813      	ldr	r3, [r2, #0]
 8000b4c:	b933      	cbnz	r3, 8000b5c <_free_r+0x2c>
 8000b4e:	6063      	str	r3, [r4, #4]
 8000b50:	6014      	str	r4, [r2, #0]
 8000b52:	4628      	mov	r0, r5
 8000b54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b58:	f000 b8dc 	b.w	8000d14 <__malloc_unlock>
 8000b5c:	42a3      	cmp	r3, r4
 8000b5e:	d908      	bls.n	8000b72 <_free_r+0x42>
 8000b60:	6820      	ldr	r0, [r4, #0]
 8000b62:	1821      	adds	r1, r4, r0
 8000b64:	428b      	cmp	r3, r1
 8000b66:	bf01      	itttt	eq
 8000b68:	6819      	ldreq	r1, [r3, #0]
 8000b6a:	685b      	ldreq	r3, [r3, #4]
 8000b6c:	1809      	addeq	r1, r1, r0
 8000b6e:	6021      	streq	r1, [r4, #0]
 8000b70:	e7ed      	b.n	8000b4e <_free_r+0x1e>
 8000b72:	461a      	mov	r2, r3
 8000b74:	685b      	ldr	r3, [r3, #4]
 8000b76:	b10b      	cbz	r3, 8000b7c <_free_r+0x4c>
 8000b78:	42a3      	cmp	r3, r4
 8000b7a:	d9fa      	bls.n	8000b72 <_free_r+0x42>
 8000b7c:	6811      	ldr	r1, [r2, #0]
 8000b7e:	1850      	adds	r0, r2, r1
 8000b80:	42a0      	cmp	r0, r4
 8000b82:	d10b      	bne.n	8000b9c <_free_r+0x6c>
 8000b84:	6820      	ldr	r0, [r4, #0]
 8000b86:	4401      	add	r1, r0
 8000b88:	1850      	adds	r0, r2, r1
 8000b8a:	4283      	cmp	r3, r0
 8000b8c:	6011      	str	r1, [r2, #0]
 8000b8e:	d1e0      	bne.n	8000b52 <_free_r+0x22>
 8000b90:	6818      	ldr	r0, [r3, #0]
 8000b92:	685b      	ldr	r3, [r3, #4]
 8000b94:	6053      	str	r3, [r2, #4]
 8000b96:	4408      	add	r0, r1
 8000b98:	6010      	str	r0, [r2, #0]
 8000b9a:	e7da      	b.n	8000b52 <_free_r+0x22>
 8000b9c:	d902      	bls.n	8000ba4 <_free_r+0x74>
 8000b9e:	230c      	movs	r3, #12
 8000ba0:	602b      	str	r3, [r5, #0]
 8000ba2:	e7d6      	b.n	8000b52 <_free_r+0x22>
 8000ba4:	6820      	ldr	r0, [r4, #0]
 8000ba6:	1821      	adds	r1, r4, r0
 8000ba8:	428b      	cmp	r3, r1
 8000baa:	bf04      	itt	eq
 8000bac:	6819      	ldreq	r1, [r3, #0]
 8000bae:	685b      	ldreq	r3, [r3, #4]
 8000bb0:	6063      	str	r3, [r4, #4]
 8000bb2:	bf04      	itt	eq
 8000bb4:	1809      	addeq	r1, r1, r0
 8000bb6:	6021      	streq	r1, [r4, #0]
 8000bb8:	6054      	str	r4, [r2, #4]
 8000bba:	e7ca      	b.n	8000b52 <_free_r+0x22>
 8000bbc:	bd38      	pop	{r3, r4, r5, pc}
 8000bbe:	bf00      	nop
 8000bc0:	200001c4 	.word	0x200001c4

08000bc4 <sbrk_aligned>:
 8000bc4:	b570      	push	{r4, r5, r6, lr}
 8000bc6:	4e0f      	ldr	r6, [pc, #60]	@ (8000c04 <sbrk_aligned+0x40>)
 8000bc8:	460c      	mov	r4, r1
 8000bca:	6831      	ldr	r1, [r6, #0]
 8000bcc:	4605      	mov	r5, r0
 8000bce:	b911      	cbnz	r1, 8000bd6 <sbrk_aligned+0x12>
 8000bd0:	f000 fdc0 	bl	8001754 <_sbrk_r>
 8000bd4:	6030      	str	r0, [r6, #0]
 8000bd6:	4621      	mov	r1, r4
 8000bd8:	4628      	mov	r0, r5
 8000bda:	f000 fdbb 	bl	8001754 <_sbrk_r>
 8000bde:	1c43      	adds	r3, r0, #1
 8000be0:	d103      	bne.n	8000bea <sbrk_aligned+0x26>
 8000be2:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000be6:	4620      	mov	r0, r4
 8000be8:	bd70      	pop	{r4, r5, r6, pc}
 8000bea:	1cc4      	adds	r4, r0, #3
 8000bec:	f024 0403 	bic.w	r4, r4, #3
 8000bf0:	42a0      	cmp	r0, r4
 8000bf2:	d0f8      	beq.n	8000be6 <sbrk_aligned+0x22>
 8000bf4:	1a21      	subs	r1, r4, r0
 8000bf6:	4628      	mov	r0, r5
 8000bf8:	f000 fdac 	bl	8001754 <_sbrk_r>
 8000bfc:	3001      	adds	r0, #1
 8000bfe:	d1f2      	bne.n	8000be6 <sbrk_aligned+0x22>
 8000c00:	e7ef      	b.n	8000be2 <sbrk_aligned+0x1e>
 8000c02:	bf00      	nop
 8000c04:	200001c0 	.word	0x200001c0

08000c08 <_malloc_r>:
 8000c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c0c:	1ccd      	adds	r5, r1, #3
 8000c0e:	f025 0503 	bic.w	r5, r5, #3
 8000c12:	3508      	adds	r5, #8
 8000c14:	2d0c      	cmp	r5, #12
 8000c16:	bf38      	it	cc
 8000c18:	250c      	movcc	r5, #12
 8000c1a:	2d00      	cmp	r5, #0
 8000c1c:	4606      	mov	r6, r0
 8000c1e:	db01      	blt.n	8000c24 <_malloc_r+0x1c>
 8000c20:	42a9      	cmp	r1, r5
 8000c22:	d904      	bls.n	8000c2e <_malloc_r+0x26>
 8000c24:	230c      	movs	r3, #12
 8000c26:	6033      	str	r3, [r6, #0]
 8000c28:	2000      	movs	r0, #0
 8000c2a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c2e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000d04 <_malloc_r+0xfc>
 8000c32:	f000 f869 	bl	8000d08 <__malloc_lock>
 8000c36:	f8d8 3000 	ldr.w	r3, [r8]
 8000c3a:	461c      	mov	r4, r3
 8000c3c:	bb44      	cbnz	r4, 8000c90 <_malloc_r+0x88>
 8000c3e:	4629      	mov	r1, r5
 8000c40:	4630      	mov	r0, r6
 8000c42:	f7ff ffbf 	bl	8000bc4 <sbrk_aligned>
 8000c46:	1c43      	adds	r3, r0, #1
 8000c48:	4604      	mov	r4, r0
 8000c4a:	d158      	bne.n	8000cfe <_malloc_r+0xf6>
 8000c4c:	f8d8 4000 	ldr.w	r4, [r8]
 8000c50:	4627      	mov	r7, r4
 8000c52:	2f00      	cmp	r7, #0
 8000c54:	d143      	bne.n	8000cde <_malloc_r+0xd6>
 8000c56:	2c00      	cmp	r4, #0
 8000c58:	d04b      	beq.n	8000cf2 <_malloc_r+0xea>
 8000c5a:	6823      	ldr	r3, [r4, #0]
 8000c5c:	4639      	mov	r1, r7
 8000c5e:	4630      	mov	r0, r6
 8000c60:	eb04 0903 	add.w	r9, r4, r3
 8000c64:	f000 fd76 	bl	8001754 <_sbrk_r>
 8000c68:	4581      	cmp	r9, r0
 8000c6a:	d142      	bne.n	8000cf2 <_malloc_r+0xea>
 8000c6c:	6821      	ldr	r1, [r4, #0]
 8000c6e:	1a6d      	subs	r5, r5, r1
 8000c70:	4629      	mov	r1, r5
 8000c72:	4630      	mov	r0, r6
 8000c74:	f7ff ffa6 	bl	8000bc4 <sbrk_aligned>
 8000c78:	3001      	adds	r0, #1
 8000c7a:	d03a      	beq.n	8000cf2 <_malloc_r+0xea>
 8000c7c:	6823      	ldr	r3, [r4, #0]
 8000c7e:	442b      	add	r3, r5
 8000c80:	6023      	str	r3, [r4, #0]
 8000c82:	f8d8 3000 	ldr.w	r3, [r8]
 8000c86:	685a      	ldr	r2, [r3, #4]
 8000c88:	bb62      	cbnz	r2, 8000ce4 <_malloc_r+0xdc>
 8000c8a:	f8c8 7000 	str.w	r7, [r8]
 8000c8e:	e00f      	b.n	8000cb0 <_malloc_r+0xa8>
 8000c90:	6822      	ldr	r2, [r4, #0]
 8000c92:	1b52      	subs	r2, r2, r5
 8000c94:	d420      	bmi.n	8000cd8 <_malloc_r+0xd0>
 8000c96:	2a0b      	cmp	r2, #11
 8000c98:	d917      	bls.n	8000cca <_malloc_r+0xc2>
 8000c9a:	1961      	adds	r1, r4, r5
 8000c9c:	42a3      	cmp	r3, r4
 8000c9e:	6025      	str	r5, [r4, #0]
 8000ca0:	bf18      	it	ne
 8000ca2:	6059      	strne	r1, [r3, #4]
 8000ca4:	6863      	ldr	r3, [r4, #4]
 8000ca6:	bf08      	it	eq
 8000ca8:	f8c8 1000 	streq.w	r1, [r8]
 8000cac:	5162      	str	r2, [r4, r5]
 8000cae:	604b      	str	r3, [r1, #4]
 8000cb0:	4630      	mov	r0, r6
 8000cb2:	f000 f82f 	bl	8000d14 <__malloc_unlock>
 8000cb6:	f104 000b 	add.w	r0, r4, #11
 8000cba:	1d23      	adds	r3, r4, #4
 8000cbc:	f020 0007 	bic.w	r0, r0, #7
 8000cc0:	1ac2      	subs	r2, r0, r3
 8000cc2:	bf1c      	itt	ne
 8000cc4:	1a1b      	subne	r3, r3, r0
 8000cc6:	50a3      	strne	r3, [r4, r2]
 8000cc8:	e7af      	b.n	8000c2a <_malloc_r+0x22>
 8000cca:	6862      	ldr	r2, [r4, #4]
 8000ccc:	42a3      	cmp	r3, r4
 8000cce:	bf0c      	ite	eq
 8000cd0:	f8c8 2000 	streq.w	r2, [r8]
 8000cd4:	605a      	strne	r2, [r3, #4]
 8000cd6:	e7eb      	b.n	8000cb0 <_malloc_r+0xa8>
 8000cd8:	4623      	mov	r3, r4
 8000cda:	6864      	ldr	r4, [r4, #4]
 8000cdc:	e7ae      	b.n	8000c3c <_malloc_r+0x34>
 8000cde:	463c      	mov	r4, r7
 8000ce0:	687f      	ldr	r7, [r7, #4]
 8000ce2:	e7b6      	b.n	8000c52 <_malloc_r+0x4a>
 8000ce4:	461a      	mov	r2, r3
 8000ce6:	685b      	ldr	r3, [r3, #4]
 8000ce8:	42a3      	cmp	r3, r4
 8000cea:	d1fb      	bne.n	8000ce4 <_malloc_r+0xdc>
 8000cec:	2300      	movs	r3, #0
 8000cee:	6053      	str	r3, [r2, #4]
 8000cf0:	e7de      	b.n	8000cb0 <_malloc_r+0xa8>
 8000cf2:	230c      	movs	r3, #12
 8000cf4:	6033      	str	r3, [r6, #0]
 8000cf6:	4630      	mov	r0, r6
 8000cf8:	f000 f80c 	bl	8000d14 <__malloc_unlock>
 8000cfc:	e794      	b.n	8000c28 <_malloc_r+0x20>
 8000cfe:	6005      	str	r5, [r0, #0]
 8000d00:	e7d6      	b.n	8000cb0 <_malloc_r+0xa8>
 8000d02:	bf00      	nop
 8000d04:	200001c4 	.word	0x200001c4

08000d08 <__malloc_lock>:
 8000d08:	4801      	ldr	r0, [pc, #4]	@ (8000d10 <__malloc_lock+0x8>)
 8000d0a:	f7ff bf0e 	b.w	8000b2a <__retarget_lock_acquire_recursive>
 8000d0e:	bf00      	nop
 8000d10:	200001bc 	.word	0x200001bc

08000d14 <__malloc_unlock>:
 8000d14:	4801      	ldr	r0, [pc, #4]	@ (8000d1c <__malloc_unlock+0x8>)
 8000d16:	f7ff bf09 	b.w	8000b2c <__retarget_lock_release_recursive>
 8000d1a:	bf00      	nop
 8000d1c:	200001bc 	.word	0x200001bc

08000d20 <__svfiscanf_r>:
 8000d20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d24:	461d      	mov	r5, r3
 8000d26:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
 8000d28:	07df      	lsls	r7, r3, #31
 8000d2a:	f5ad 7d22 	sub.w	sp, sp, #648	@ 0x288
 8000d2e:	4606      	mov	r6, r0
 8000d30:	460c      	mov	r4, r1
 8000d32:	4691      	mov	r9, r2
 8000d34:	d405      	bmi.n	8000d42 <__svfiscanf_r+0x22>
 8000d36:	898b      	ldrh	r3, [r1, #12]
 8000d38:	0598      	lsls	r0, r3, #22
 8000d3a:	d402      	bmi.n	8000d42 <__svfiscanf_r+0x22>
 8000d3c:	6d88      	ldr	r0, [r1, #88]	@ 0x58
 8000d3e:	f7ff fef4 	bl	8000b2a <__retarget_lock_acquire_recursive>
 8000d42:	2300      	movs	r3, #0
 8000d44:	e9cd 3344 	strd	r3, r3, [sp, #272]	@ 0x110
 8000d48:	4ba7      	ldr	r3, [pc, #668]	@ (8000fe8 <__svfiscanf_r+0x2c8>)
 8000d4a:	93a0      	str	r3, [sp, #640]	@ 0x280
 8000d4c:	f10d 0804 	add.w	r8, sp, #4
 8000d50:	4ba6      	ldr	r3, [pc, #664]	@ (8000fec <__svfiscanf_r+0x2cc>)
 8000d52:	4fa7      	ldr	r7, [pc, #668]	@ (8000ff0 <__svfiscanf_r+0x2d0>)
 8000d54:	f8cd 8118 	str.w	r8, [sp, #280]	@ 0x118
 8000d58:	93a1      	str	r3, [sp, #644]	@ 0x284
 8000d5a:	9500      	str	r5, [sp, #0]
 8000d5c:	f899 3000 	ldrb.w	r3, [r9]
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	f000 816c 	beq.w	800103e <__svfiscanf_r+0x31e>
 8000d66:	5cf9      	ldrb	r1, [r7, r3]
 8000d68:	f011 0108 	ands.w	r1, r1, #8
 8000d6c:	f109 0501 	add.w	r5, r9, #1
 8000d70:	d019      	beq.n	8000da6 <__svfiscanf_r+0x86>
 8000d72:	6863      	ldr	r3, [r4, #4]
 8000d74:	2b00      	cmp	r3, #0
 8000d76:	dd0f      	ble.n	8000d98 <__svfiscanf_r+0x78>
 8000d78:	6823      	ldr	r3, [r4, #0]
 8000d7a:	781a      	ldrb	r2, [r3, #0]
 8000d7c:	5cba      	ldrb	r2, [r7, r2]
 8000d7e:	0711      	lsls	r1, r2, #28
 8000d80:	d401      	bmi.n	8000d86 <__svfiscanf_r+0x66>
 8000d82:	46a9      	mov	r9, r5
 8000d84:	e7ea      	b.n	8000d5c <__svfiscanf_r+0x3c>
 8000d86:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 8000d88:	3201      	adds	r2, #1
 8000d8a:	9245      	str	r2, [sp, #276]	@ 0x114
 8000d8c:	6862      	ldr	r2, [r4, #4]
 8000d8e:	3301      	adds	r3, #1
 8000d90:	3a01      	subs	r2, #1
 8000d92:	6062      	str	r2, [r4, #4]
 8000d94:	6023      	str	r3, [r4, #0]
 8000d96:	e7ec      	b.n	8000d72 <__svfiscanf_r+0x52>
 8000d98:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8000d9a:	4621      	mov	r1, r4
 8000d9c:	4630      	mov	r0, r6
 8000d9e:	4798      	blx	r3
 8000da0:	2800      	cmp	r0, #0
 8000da2:	d0e9      	beq.n	8000d78 <__svfiscanf_r+0x58>
 8000da4:	e7ed      	b.n	8000d82 <__svfiscanf_r+0x62>
 8000da6:	2b25      	cmp	r3, #37	@ 0x25
 8000da8:	d012      	beq.n	8000dd0 <__svfiscanf_r+0xb0>
 8000daa:	4699      	mov	r9, r3
 8000dac:	6863      	ldr	r3, [r4, #4]
 8000dae:	2b00      	cmp	r3, #0
 8000db0:	f340 8095 	ble.w	8000ede <__svfiscanf_r+0x1be>
 8000db4:	6822      	ldr	r2, [r4, #0]
 8000db6:	7813      	ldrb	r3, [r2, #0]
 8000db8:	454b      	cmp	r3, r9
 8000dba:	f040 8140 	bne.w	800103e <__svfiscanf_r+0x31e>
 8000dbe:	6863      	ldr	r3, [r4, #4]
 8000dc0:	3b01      	subs	r3, #1
 8000dc2:	6063      	str	r3, [r4, #4]
 8000dc4:	9b45      	ldr	r3, [sp, #276]	@ 0x114
 8000dc6:	3201      	adds	r2, #1
 8000dc8:	3301      	adds	r3, #1
 8000dca:	6022      	str	r2, [r4, #0]
 8000dcc:	9345      	str	r3, [sp, #276]	@ 0x114
 8000dce:	e7d8      	b.n	8000d82 <__svfiscanf_r+0x62>
 8000dd0:	9141      	str	r1, [sp, #260]	@ 0x104
 8000dd2:	9143      	str	r1, [sp, #268]	@ 0x10c
 8000dd4:	f899 3001 	ldrb.w	r3, [r9, #1]
 8000dd8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000dda:	bf02      	ittt	eq
 8000ddc:	2310      	moveq	r3, #16
 8000dde:	9341      	streq	r3, [sp, #260]	@ 0x104
 8000de0:	f109 0502 	addeq.w	r5, r9, #2
 8000de4:	220a      	movs	r2, #10
 8000de6:	46a9      	mov	r9, r5
 8000de8:	f819 1b01 	ldrb.w	r1, [r9], #1
 8000dec:	f1a1 0330 	sub.w	r3, r1, #48	@ 0x30
 8000df0:	2b09      	cmp	r3, #9
 8000df2:	d91f      	bls.n	8000e34 <__svfiscanf_r+0x114>
 8000df4:	f8df a1fc 	ldr.w	sl, [pc, #508]	@ 8000ff4 <__svfiscanf_r+0x2d4>
 8000df8:	2203      	movs	r2, #3
 8000dfa:	4650      	mov	r0, sl
 8000dfc:	f7ff f9e8 	bl	80001d0 <memchr>
 8000e00:	b138      	cbz	r0, 8000e12 <__svfiscanf_r+0xf2>
 8000e02:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 8000e04:	eba0 000a 	sub.w	r0, r0, sl
 8000e08:	2301      	movs	r3, #1
 8000e0a:	4083      	lsls	r3, r0
 8000e0c:	4313      	orrs	r3, r2
 8000e0e:	9341      	str	r3, [sp, #260]	@ 0x104
 8000e10:	464d      	mov	r5, r9
 8000e12:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000e16:	2b78      	cmp	r3, #120	@ 0x78
 8000e18:	d807      	bhi.n	8000e2a <__svfiscanf_r+0x10a>
 8000e1a:	2b57      	cmp	r3, #87	@ 0x57
 8000e1c:	d811      	bhi.n	8000e42 <__svfiscanf_r+0x122>
 8000e1e:	2b25      	cmp	r3, #37	@ 0x25
 8000e20:	d0c3      	beq.n	8000daa <__svfiscanf_r+0x8a>
 8000e22:	d857      	bhi.n	8000ed4 <__svfiscanf_r+0x1b4>
 8000e24:	2b00      	cmp	r3, #0
 8000e26:	f000 80c1 	beq.w	8000fac <__svfiscanf_r+0x28c>
 8000e2a:	2303      	movs	r3, #3
 8000e2c:	9347      	str	r3, [sp, #284]	@ 0x11c
 8000e2e:	230a      	movs	r3, #10
 8000e30:	9342      	str	r3, [sp, #264]	@ 0x108
 8000e32:	e07e      	b.n	8000f32 <__svfiscanf_r+0x212>
 8000e34:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 8000e36:	fb02 1103 	mla	r1, r2, r3, r1
 8000e3a:	3930      	subs	r1, #48	@ 0x30
 8000e3c:	9143      	str	r1, [sp, #268]	@ 0x10c
 8000e3e:	464d      	mov	r5, r9
 8000e40:	e7d1      	b.n	8000de6 <__svfiscanf_r+0xc6>
 8000e42:	f1a3 0258 	sub.w	r2, r3, #88	@ 0x58
 8000e46:	2a20      	cmp	r2, #32
 8000e48:	d8ef      	bhi.n	8000e2a <__svfiscanf_r+0x10a>
 8000e4a:	a101      	add	r1, pc, #4	@ (adr r1, 8000e50 <__svfiscanf_r+0x130>)
 8000e4c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8000e50:	08000f11 	.word	0x08000f11
 8000e54:	08000e2b 	.word	0x08000e2b
 8000e58:	08000e2b 	.word	0x08000e2b
 8000e5c:	08000f6b 	.word	0x08000f6b
 8000e60:	08000e2b 	.word	0x08000e2b
 8000e64:	08000e2b 	.word	0x08000e2b
 8000e68:	08000e2b 	.word	0x08000e2b
 8000e6c:	08000e2b 	.word	0x08000e2b
 8000e70:	08000e2b 	.word	0x08000e2b
 8000e74:	08000e2b 	.word	0x08000e2b
 8000e78:	08000e2b 	.word	0x08000e2b
 8000e7c:	08000f81 	.word	0x08000f81
 8000e80:	08000f67 	.word	0x08000f67
 8000e84:	08000edb 	.word	0x08000edb
 8000e88:	08000edb 	.word	0x08000edb
 8000e8c:	08000edb 	.word	0x08000edb
 8000e90:	08000e2b 	.word	0x08000e2b
 8000e94:	08000f23 	.word	0x08000f23
 8000e98:	08000e2b 	.word	0x08000e2b
 8000e9c:	08000e2b 	.word	0x08000e2b
 8000ea0:	08000e2b 	.word	0x08000e2b
 8000ea4:	08000e2b 	.word	0x08000e2b
 8000ea8:	08000f91 	.word	0x08000f91
 8000eac:	08000f2b 	.word	0x08000f2b
 8000eb0:	08000f09 	.word	0x08000f09
 8000eb4:	08000e2b 	.word	0x08000e2b
 8000eb8:	08000e2b 	.word	0x08000e2b
 8000ebc:	08000f8d 	.word	0x08000f8d
 8000ec0:	08000e2b 	.word	0x08000e2b
 8000ec4:	08000f67 	.word	0x08000f67
 8000ec8:	08000e2b 	.word	0x08000e2b
 8000ecc:	08000e2b 	.word	0x08000e2b
 8000ed0:	08000f11 	.word	0x08000f11
 8000ed4:	3b45      	subs	r3, #69	@ 0x45
 8000ed6:	2b02      	cmp	r3, #2
 8000ed8:	d8a7      	bhi.n	8000e2a <__svfiscanf_r+0x10a>
 8000eda:	2305      	movs	r3, #5
 8000edc:	e028      	b.n	8000f30 <__svfiscanf_r+0x210>
 8000ede:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8000ee0:	4621      	mov	r1, r4
 8000ee2:	4630      	mov	r0, r6
 8000ee4:	4798      	blx	r3
 8000ee6:	2800      	cmp	r0, #0
 8000ee8:	f43f af64 	beq.w	8000db4 <__svfiscanf_r+0x94>
 8000eec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000eee:	07da      	lsls	r2, r3, #31
 8000ef0:	f140 809d 	bpl.w	800102e <__svfiscanf_r+0x30e>
 8000ef4:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8000ef6:	2800      	cmp	r0, #0
 8000ef8:	d061      	beq.n	8000fbe <__svfiscanf_r+0x29e>
 8000efa:	89a3      	ldrh	r3, [r4, #12]
 8000efc:	0659      	lsls	r1, r3, #25
 8000efe:	d45e      	bmi.n	8000fbe <__svfiscanf_r+0x29e>
 8000f00:	f50d 7d22 	add.w	sp, sp, #648	@ 0x288
 8000f04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f08:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 8000f0a:	f042 0220 	orr.w	r2, r2, #32
 8000f0e:	9241      	str	r2, [sp, #260]	@ 0x104
 8000f10:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 8000f12:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000f16:	9241      	str	r2, [sp, #260]	@ 0x104
 8000f18:	2210      	movs	r2, #16
 8000f1a:	2b6e      	cmp	r3, #110	@ 0x6e
 8000f1c:	9242      	str	r2, [sp, #264]	@ 0x108
 8000f1e:	d902      	bls.n	8000f26 <__svfiscanf_r+0x206>
 8000f20:	e005      	b.n	8000f2e <__svfiscanf_r+0x20e>
 8000f22:	2300      	movs	r3, #0
 8000f24:	9342      	str	r3, [sp, #264]	@ 0x108
 8000f26:	2303      	movs	r3, #3
 8000f28:	e002      	b.n	8000f30 <__svfiscanf_r+0x210>
 8000f2a:	2308      	movs	r3, #8
 8000f2c:	9342      	str	r3, [sp, #264]	@ 0x108
 8000f2e:	2304      	movs	r3, #4
 8000f30:	9347      	str	r3, [sp, #284]	@ 0x11c
 8000f32:	6863      	ldr	r3, [r4, #4]
 8000f34:	2b00      	cmp	r3, #0
 8000f36:	dd45      	ble.n	8000fc4 <__svfiscanf_r+0x2a4>
 8000f38:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 8000f3a:	0659      	lsls	r1, r3, #25
 8000f3c:	d404      	bmi.n	8000f48 <__svfiscanf_r+0x228>
 8000f3e:	6823      	ldr	r3, [r4, #0]
 8000f40:	781a      	ldrb	r2, [r3, #0]
 8000f42:	5cba      	ldrb	r2, [r7, r2]
 8000f44:	0712      	lsls	r2, r2, #28
 8000f46:	d444      	bmi.n	8000fd2 <__svfiscanf_r+0x2b2>
 8000f48:	9b47      	ldr	r3, [sp, #284]	@ 0x11c
 8000f4a:	2b02      	cmp	r3, #2
 8000f4c:	dc5b      	bgt.n	8001006 <__svfiscanf_r+0x2e6>
 8000f4e:	466b      	mov	r3, sp
 8000f50:	4622      	mov	r2, r4
 8000f52:	a941      	add	r1, sp, #260	@ 0x104
 8000f54:	4630      	mov	r0, r6
 8000f56:	f000 f893 	bl	8001080 <_scanf_chars>
 8000f5a:	2801      	cmp	r0, #1
 8000f5c:	d06f      	beq.n	800103e <__svfiscanf_r+0x31e>
 8000f5e:	2802      	cmp	r0, #2
 8000f60:	f47f af0f 	bne.w	8000d82 <__svfiscanf_r+0x62>
 8000f64:	e7c2      	b.n	8000eec <__svfiscanf_r+0x1cc>
 8000f66:	220a      	movs	r2, #10
 8000f68:	e7d7      	b.n	8000f1a <__svfiscanf_r+0x1fa>
 8000f6a:	4629      	mov	r1, r5
 8000f6c:	4640      	mov	r0, r8
 8000f6e:	f000 faff 	bl	8001570 <__sccl>
 8000f72:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 8000f74:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f78:	9341      	str	r3, [sp, #260]	@ 0x104
 8000f7a:	4605      	mov	r5, r0
 8000f7c:	2301      	movs	r3, #1
 8000f7e:	e7d7      	b.n	8000f30 <__svfiscanf_r+0x210>
 8000f80:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 8000f82:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f86:	9341      	str	r3, [sp, #260]	@ 0x104
 8000f88:	2300      	movs	r3, #0
 8000f8a:	e7d1      	b.n	8000f30 <__svfiscanf_r+0x210>
 8000f8c:	2302      	movs	r3, #2
 8000f8e:	e7cf      	b.n	8000f30 <__svfiscanf_r+0x210>
 8000f90:	9841      	ldr	r0, [sp, #260]	@ 0x104
 8000f92:	06c3      	lsls	r3, r0, #27
 8000f94:	f53f aef5 	bmi.w	8000d82 <__svfiscanf_r+0x62>
 8000f98:	9b00      	ldr	r3, [sp, #0]
 8000f9a:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 8000f9c:	1d19      	adds	r1, r3, #4
 8000f9e:	9100      	str	r1, [sp, #0]
 8000fa0:	681b      	ldr	r3, [r3, #0]
 8000fa2:	07c0      	lsls	r0, r0, #31
 8000fa4:	bf4c      	ite	mi
 8000fa6:	801a      	strhmi	r2, [r3, #0]
 8000fa8:	601a      	strpl	r2, [r3, #0]
 8000faa:	e6ea      	b.n	8000d82 <__svfiscanf_r+0x62>
 8000fac:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000fae:	07de      	lsls	r6, r3, #31
 8000fb0:	d405      	bmi.n	8000fbe <__svfiscanf_r+0x29e>
 8000fb2:	89a3      	ldrh	r3, [r4, #12]
 8000fb4:	059d      	lsls	r5, r3, #22
 8000fb6:	d402      	bmi.n	8000fbe <__svfiscanf_r+0x29e>
 8000fb8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000fba:	f7ff fdb7 	bl	8000b2c <__retarget_lock_release_recursive>
 8000fbe:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000fc2:	e79d      	b.n	8000f00 <__svfiscanf_r+0x1e0>
 8000fc4:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8000fc6:	4621      	mov	r1, r4
 8000fc8:	4630      	mov	r0, r6
 8000fca:	4798      	blx	r3
 8000fcc:	2800      	cmp	r0, #0
 8000fce:	d0b3      	beq.n	8000f38 <__svfiscanf_r+0x218>
 8000fd0:	e78c      	b.n	8000eec <__svfiscanf_r+0x1cc>
 8000fd2:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 8000fd4:	3201      	adds	r2, #1
 8000fd6:	9245      	str	r2, [sp, #276]	@ 0x114
 8000fd8:	6862      	ldr	r2, [r4, #4]
 8000fda:	3a01      	subs	r2, #1
 8000fdc:	2a00      	cmp	r2, #0
 8000fde:	6062      	str	r2, [r4, #4]
 8000fe0:	dd0a      	ble.n	8000ff8 <__svfiscanf_r+0x2d8>
 8000fe2:	3301      	adds	r3, #1
 8000fe4:	6023      	str	r3, [r4, #0]
 8000fe6:	e7aa      	b.n	8000f3e <__svfiscanf_r+0x21e>
 8000fe8:	08001657 	.word	0x08001657
 8000fec:	08001489 	.word	0x08001489
 8000ff0:	08001b64 	.word	0x08001b64
 8000ff4:	08001b44 	.word	0x08001b44
 8000ff8:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8000ffa:	4621      	mov	r1, r4
 8000ffc:	4630      	mov	r0, r6
 8000ffe:	4798      	blx	r3
 8001000:	2800      	cmp	r0, #0
 8001002:	d09c      	beq.n	8000f3e <__svfiscanf_r+0x21e>
 8001004:	e772      	b.n	8000eec <__svfiscanf_r+0x1cc>
 8001006:	2b04      	cmp	r3, #4
 8001008:	dc06      	bgt.n	8001018 <__svfiscanf_r+0x2f8>
 800100a:	466b      	mov	r3, sp
 800100c:	4622      	mov	r2, r4
 800100e:	a941      	add	r1, sp, #260	@ 0x104
 8001010:	4630      	mov	r0, r6
 8001012:	f000 f88f 	bl	8001134 <_scanf_i>
 8001016:	e7a0      	b.n	8000f5a <__svfiscanf_r+0x23a>
 8001018:	4b0e      	ldr	r3, [pc, #56]	@ (8001054 <__svfiscanf_r+0x334>)
 800101a:	2b00      	cmp	r3, #0
 800101c:	f43f aeb1 	beq.w	8000d82 <__svfiscanf_r+0x62>
 8001020:	466b      	mov	r3, sp
 8001022:	4622      	mov	r2, r4
 8001024:	a941      	add	r1, sp, #260	@ 0x104
 8001026:	4630      	mov	r0, r6
 8001028:	f3af 8000 	nop.w
 800102c:	e795      	b.n	8000f5a <__svfiscanf_r+0x23a>
 800102e:	89a3      	ldrh	r3, [r4, #12]
 8001030:	0598      	lsls	r0, r3, #22
 8001032:	f53f af5f 	bmi.w	8000ef4 <__svfiscanf_r+0x1d4>
 8001036:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001038:	f7ff fd78 	bl	8000b2c <__retarget_lock_release_recursive>
 800103c:	e75a      	b.n	8000ef4 <__svfiscanf_r+0x1d4>
 800103e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001040:	07da      	lsls	r2, r3, #31
 8001042:	d405      	bmi.n	8001050 <__svfiscanf_r+0x330>
 8001044:	89a3      	ldrh	r3, [r4, #12]
 8001046:	059b      	lsls	r3, r3, #22
 8001048:	d402      	bmi.n	8001050 <__svfiscanf_r+0x330>
 800104a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800104c:	f7ff fd6e 	bl	8000b2c <__retarget_lock_release_recursive>
 8001050:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8001052:	e755      	b.n	8000f00 <__svfiscanf_r+0x1e0>
 8001054:	00000000 	.word	0x00000000

08001058 <_vfiscanf_r>:
 8001058:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800105c:	460d      	mov	r5, r1
 800105e:	4616      	mov	r6, r2
 8001060:	461f      	mov	r7, r3
 8001062:	4604      	mov	r4, r0
 8001064:	b118      	cbz	r0, 800106e <_vfiscanf_r+0x16>
 8001066:	6a03      	ldr	r3, [r0, #32]
 8001068:	b90b      	cbnz	r3, 800106e <_vfiscanf_r+0x16>
 800106a:	f7ff fc59 	bl	8000920 <__sinit>
 800106e:	463b      	mov	r3, r7
 8001070:	4632      	mov	r2, r6
 8001072:	4629      	mov	r1, r5
 8001074:	4620      	mov	r0, r4
 8001076:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800107a:	f7ff be51 	b.w	8000d20 <__svfiscanf_r>
	...

08001080 <_scanf_chars>:
 8001080:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001084:	4615      	mov	r5, r2
 8001086:	688a      	ldr	r2, [r1, #8]
 8001088:	4680      	mov	r8, r0
 800108a:	460c      	mov	r4, r1
 800108c:	b932      	cbnz	r2, 800109c <_scanf_chars+0x1c>
 800108e:	698a      	ldr	r2, [r1, #24]
 8001090:	2a00      	cmp	r2, #0
 8001092:	bf14      	ite	ne
 8001094:	f04f 32ff 	movne.w	r2, #4294967295	@ 0xffffffff
 8001098:	2201      	moveq	r2, #1
 800109a:	608a      	str	r2, [r1, #8]
 800109c:	6822      	ldr	r2, [r4, #0]
 800109e:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8001130 <_scanf_chars+0xb0>
 80010a2:	06d1      	lsls	r1, r2, #27
 80010a4:	bf5f      	itttt	pl
 80010a6:	681a      	ldrpl	r2, [r3, #0]
 80010a8:	1d11      	addpl	r1, r2, #4
 80010aa:	6019      	strpl	r1, [r3, #0]
 80010ac:	6816      	ldrpl	r6, [r2, #0]
 80010ae:	2700      	movs	r7, #0
 80010b0:	69a0      	ldr	r0, [r4, #24]
 80010b2:	b188      	cbz	r0, 80010d8 <_scanf_chars+0x58>
 80010b4:	2801      	cmp	r0, #1
 80010b6:	d107      	bne.n	80010c8 <_scanf_chars+0x48>
 80010b8:	682b      	ldr	r3, [r5, #0]
 80010ba:	781a      	ldrb	r2, [r3, #0]
 80010bc:	6963      	ldr	r3, [r4, #20]
 80010be:	5c9b      	ldrb	r3, [r3, r2]
 80010c0:	b953      	cbnz	r3, 80010d8 <_scanf_chars+0x58>
 80010c2:	2f00      	cmp	r7, #0
 80010c4:	d031      	beq.n	800112a <_scanf_chars+0xaa>
 80010c6:	e022      	b.n	800110e <_scanf_chars+0x8e>
 80010c8:	2802      	cmp	r0, #2
 80010ca:	d120      	bne.n	800110e <_scanf_chars+0x8e>
 80010cc:	682b      	ldr	r3, [r5, #0]
 80010ce:	781b      	ldrb	r3, [r3, #0]
 80010d0:	f819 3003 	ldrb.w	r3, [r9, r3]
 80010d4:	071b      	lsls	r3, r3, #28
 80010d6:	d41a      	bmi.n	800110e <_scanf_chars+0x8e>
 80010d8:	6823      	ldr	r3, [r4, #0]
 80010da:	06da      	lsls	r2, r3, #27
 80010dc:	bf5e      	ittt	pl
 80010de:	682b      	ldrpl	r3, [r5, #0]
 80010e0:	781b      	ldrbpl	r3, [r3, #0]
 80010e2:	f806 3b01 	strbpl.w	r3, [r6], #1
 80010e6:	682a      	ldr	r2, [r5, #0]
 80010e8:	686b      	ldr	r3, [r5, #4]
 80010ea:	3201      	adds	r2, #1
 80010ec:	602a      	str	r2, [r5, #0]
 80010ee:	68a2      	ldr	r2, [r4, #8]
 80010f0:	3b01      	subs	r3, #1
 80010f2:	3a01      	subs	r2, #1
 80010f4:	606b      	str	r3, [r5, #4]
 80010f6:	3701      	adds	r7, #1
 80010f8:	60a2      	str	r2, [r4, #8]
 80010fa:	b142      	cbz	r2, 800110e <_scanf_chars+0x8e>
 80010fc:	2b00      	cmp	r3, #0
 80010fe:	dcd7      	bgt.n	80010b0 <_scanf_chars+0x30>
 8001100:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8001104:	4629      	mov	r1, r5
 8001106:	4640      	mov	r0, r8
 8001108:	4798      	blx	r3
 800110a:	2800      	cmp	r0, #0
 800110c:	d0d0      	beq.n	80010b0 <_scanf_chars+0x30>
 800110e:	6823      	ldr	r3, [r4, #0]
 8001110:	f013 0310 	ands.w	r3, r3, #16
 8001114:	d105      	bne.n	8001122 <_scanf_chars+0xa2>
 8001116:	68e2      	ldr	r2, [r4, #12]
 8001118:	3201      	adds	r2, #1
 800111a:	60e2      	str	r2, [r4, #12]
 800111c:	69a2      	ldr	r2, [r4, #24]
 800111e:	b102      	cbz	r2, 8001122 <_scanf_chars+0xa2>
 8001120:	7033      	strb	r3, [r6, #0]
 8001122:	6923      	ldr	r3, [r4, #16]
 8001124:	443b      	add	r3, r7
 8001126:	6123      	str	r3, [r4, #16]
 8001128:	2000      	movs	r0, #0
 800112a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800112e:	bf00      	nop
 8001130:	08001b64 	.word	0x08001b64

08001134 <_scanf_i>:
 8001134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001138:	4698      	mov	r8, r3
 800113a:	4b74      	ldr	r3, [pc, #464]	@ (800130c <_scanf_i+0x1d8>)
 800113c:	460c      	mov	r4, r1
 800113e:	4682      	mov	sl, r0
 8001140:	4616      	mov	r6, r2
 8001142:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8001146:	b087      	sub	sp, #28
 8001148:	ab03      	add	r3, sp, #12
 800114a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800114e:	4b70      	ldr	r3, [pc, #448]	@ (8001310 <_scanf_i+0x1dc>)
 8001150:	69a1      	ldr	r1, [r4, #24]
 8001152:	4a70      	ldr	r2, [pc, #448]	@ (8001314 <_scanf_i+0x1e0>)
 8001154:	2903      	cmp	r1, #3
 8001156:	bf08      	it	eq
 8001158:	461a      	moveq	r2, r3
 800115a:	68a3      	ldr	r3, [r4, #8]
 800115c:	9201      	str	r2, [sp, #4]
 800115e:	1e5a      	subs	r2, r3, #1
 8001160:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8001164:	bf88      	it	hi
 8001166:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 800116a:	4627      	mov	r7, r4
 800116c:	bf82      	ittt	hi
 800116e:	eb03 0905 	addhi.w	r9, r3, r5
 8001172:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8001176:	60a3      	strhi	r3, [r4, #8]
 8001178:	f857 3b1c 	ldr.w	r3, [r7], #28
 800117c:	f443 6350 	orr.w	r3, r3, #3328	@ 0xd00
 8001180:	bf98      	it	ls
 8001182:	f04f 0900 	movls.w	r9, #0
 8001186:	6023      	str	r3, [r4, #0]
 8001188:	463d      	mov	r5, r7
 800118a:	f04f 0b00 	mov.w	fp, #0
 800118e:	6831      	ldr	r1, [r6, #0]
 8001190:	ab03      	add	r3, sp, #12
 8001192:	7809      	ldrb	r1, [r1, #0]
 8001194:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8001198:	2202      	movs	r2, #2
 800119a:	f7ff f819 	bl	80001d0 <memchr>
 800119e:	b328      	cbz	r0, 80011ec <_scanf_i+0xb8>
 80011a0:	f1bb 0f01 	cmp.w	fp, #1
 80011a4:	d159      	bne.n	800125a <_scanf_i+0x126>
 80011a6:	6862      	ldr	r2, [r4, #4]
 80011a8:	b92a      	cbnz	r2, 80011b6 <_scanf_i+0x82>
 80011aa:	6822      	ldr	r2, [r4, #0]
 80011ac:	2108      	movs	r1, #8
 80011ae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80011b2:	6061      	str	r1, [r4, #4]
 80011b4:	6022      	str	r2, [r4, #0]
 80011b6:	6822      	ldr	r2, [r4, #0]
 80011b8:	f422 62a0 	bic.w	r2, r2, #1280	@ 0x500
 80011bc:	6022      	str	r2, [r4, #0]
 80011be:	68a2      	ldr	r2, [r4, #8]
 80011c0:	1e51      	subs	r1, r2, #1
 80011c2:	60a1      	str	r1, [r4, #8]
 80011c4:	b192      	cbz	r2, 80011ec <_scanf_i+0xb8>
 80011c6:	6832      	ldr	r2, [r6, #0]
 80011c8:	1c51      	adds	r1, r2, #1
 80011ca:	6031      	str	r1, [r6, #0]
 80011cc:	7812      	ldrb	r2, [r2, #0]
 80011ce:	f805 2b01 	strb.w	r2, [r5], #1
 80011d2:	6872      	ldr	r2, [r6, #4]
 80011d4:	3a01      	subs	r2, #1
 80011d6:	2a00      	cmp	r2, #0
 80011d8:	6072      	str	r2, [r6, #4]
 80011da:	dc07      	bgt.n	80011ec <_scanf_i+0xb8>
 80011dc:	f8d4 2180 	ldr.w	r2, [r4, #384]	@ 0x180
 80011e0:	4631      	mov	r1, r6
 80011e2:	4650      	mov	r0, sl
 80011e4:	4790      	blx	r2
 80011e6:	2800      	cmp	r0, #0
 80011e8:	f040 8085 	bne.w	80012f6 <_scanf_i+0x1c2>
 80011ec:	f10b 0b01 	add.w	fp, fp, #1
 80011f0:	f1bb 0f03 	cmp.w	fp, #3
 80011f4:	d1cb      	bne.n	800118e <_scanf_i+0x5a>
 80011f6:	6863      	ldr	r3, [r4, #4]
 80011f8:	b90b      	cbnz	r3, 80011fe <_scanf_i+0xca>
 80011fa:	230a      	movs	r3, #10
 80011fc:	6063      	str	r3, [r4, #4]
 80011fe:	6863      	ldr	r3, [r4, #4]
 8001200:	4945      	ldr	r1, [pc, #276]	@ (8001318 <_scanf_i+0x1e4>)
 8001202:	6960      	ldr	r0, [r4, #20]
 8001204:	1ac9      	subs	r1, r1, r3
 8001206:	f000 f9b3 	bl	8001570 <__sccl>
 800120a:	f04f 0b00 	mov.w	fp, #0
 800120e:	68a3      	ldr	r3, [r4, #8]
 8001210:	6822      	ldr	r2, [r4, #0]
 8001212:	2b00      	cmp	r3, #0
 8001214:	d03d      	beq.n	8001292 <_scanf_i+0x15e>
 8001216:	6831      	ldr	r1, [r6, #0]
 8001218:	6960      	ldr	r0, [r4, #20]
 800121a:	f891 c000 	ldrb.w	ip, [r1]
 800121e:	f810 000c 	ldrb.w	r0, [r0, ip]
 8001222:	2800      	cmp	r0, #0
 8001224:	d035      	beq.n	8001292 <_scanf_i+0x15e>
 8001226:	f1bc 0f30 	cmp.w	ip, #48	@ 0x30
 800122a:	d124      	bne.n	8001276 <_scanf_i+0x142>
 800122c:	0510      	lsls	r0, r2, #20
 800122e:	d522      	bpl.n	8001276 <_scanf_i+0x142>
 8001230:	f10b 0b01 	add.w	fp, fp, #1
 8001234:	f1b9 0f00 	cmp.w	r9, #0
 8001238:	d003      	beq.n	8001242 <_scanf_i+0x10e>
 800123a:	3301      	adds	r3, #1
 800123c:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
 8001240:	60a3      	str	r3, [r4, #8]
 8001242:	6873      	ldr	r3, [r6, #4]
 8001244:	3b01      	subs	r3, #1
 8001246:	2b00      	cmp	r3, #0
 8001248:	6073      	str	r3, [r6, #4]
 800124a:	dd1b      	ble.n	8001284 <_scanf_i+0x150>
 800124c:	6833      	ldr	r3, [r6, #0]
 800124e:	3301      	adds	r3, #1
 8001250:	6033      	str	r3, [r6, #0]
 8001252:	68a3      	ldr	r3, [r4, #8]
 8001254:	3b01      	subs	r3, #1
 8001256:	60a3      	str	r3, [r4, #8]
 8001258:	e7d9      	b.n	800120e <_scanf_i+0xda>
 800125a:	f1bb 0f02 	cmp.w	fp, #2
 800125e:	d1ae      	bne.n	80011be <_scanf_i+0x8a>
 8001260:	6822      	ldr	r2, [r4, #0]
 8001262:	f402 61c0 	and.w	r1, r2, #1536	@ 0x600
 8001266:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 800126a:	d1bf      	bne.n	80011ec <_scanf_i+0xb8>
 800126c:	2110      	movs	r1, #16
 800126e:	6061      	str	r1, [r4, #4]
 8001270:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001274:	e7a2      	b.n	80011bc <_scanf_i+0x88>
 8001276:	f422 6210 	bic.w	r2, r2, #2304	@ 0x900
 800127a:	6022      	str	r2, [r4, #0]
 800127c:	780b      	ldrb	r3, [r1, #0]
 800127e:	f805 3b01 	strb.w	r3, [r5], #1
 8001282:	e7de      	b.n	8001242 <_scanf_i+0x10e>
 8001284:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8001288:	4631      	mov	r1, r6
 800128a:	4650      	mov	r0, sl
 800128c:	4798      	blx	r3
 800128e:	2800      	cmp	r0, #0
 8001290:	d0df      	beq.n	8001252 <_scanf_i+0x11e>
 8001292:	6823      	ldr	r3, [r4, #0]
 8001294:	05d9      	lsls	r1, r3, #23
 8001296:	d50d      	bpl.n	80012b4 <_scanf_i+0x180>
 8001298:	42bd      	cmp	r5, r7
 800129a:	d909      	bls.n	80012b0 <_scanf_i+0x17c>
 800129c:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 80012a0:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80012a4:	4632      	mov	r2, r6
 80012a6:	4650      	mov	r0, sl
 80012a8:	4798      	blx	r3
 80012aa:	f105 39ff 	add.w	r9, r5, #4294967295	@ 0xffffffff
 80012ae:	464d      	mov	r5, r9
 80012b0:	42bd      	cmp	r5, r7
 80012b2:	d028      	beq.n	8001306 <_scanf_i+0x1d2>
 80012b4:	6822      	ldr	r2, [r4, #0]
 80012b6:	f012 0210 	ands.w	r2, r2, #16
 80012ba:	d113      	bne.n	80012e4 <_scanf_i+0x1b0>
 80012bc:	702a      	strb	r2, [r5, #0]
 80012be:	6863      	ldr	r3, [r4, #4]
 80012c0:	9e01      	ldr	r6, [sp, #4]
 80012c2:	4639      	mov	r1, r7
 80012c4:	4650      	mov	r0, sl
 80012c6:	47b0      	blx	r6
 80012c8:	f8d8 3000 	ldr.w	r3, [r8]
 80012cc:	6821      	ldr	r1, [r4, #0]
 80012ce:	1d1a      	adds	r2, r3, #4
 80012d0:	f8c8 2000 	str.w	r2, [r8]
 80012d4:	f011 0f20 	tst.w	r1, #32
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	d00f      	beq.n	80012fc <_scanf_i+0x1c8>
 80012dc:	6018      	str	r0, [r3, #0]
 80012de:	68e3      	ldr	r3, [r4, #12]
 80012e0:	3301      	adds	r3, #1
 80012e2:	60e3      	str	r3, [r4, #12]
 80012e4:	6923      	ldr	r3, [r4, #16]
 80012e6:	1bed      	subs	r5, r5, r7
 80012e8:	445d      	add	r5, fp
 80012ea:	442b      	add	r3, r5
 80012ec:	6123      	str	r3, [r4, #16]
 80012ee:	2000      	movs	r0, #0
 80012f0:	b007      	add	sp, #28
 80012f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80012f6:	f04f 0b00 	mov.w	fp, #0
 80012fa:	e7ca      	b.n	8001292 <_scanf_i+0x15e>
 80012fc:	07ca      	lsls	r2, r1, #31
 80012fe:	bf4c      	ite	mi
 8001300:	8018      	strhmi	r0, [r3, #0]
 8001302:	6018      	strpl	r0, [r3, #0]
 8001304:	e7eb      	b.n	80012de <_scanf_i+0x1aa>
 8001306:	2001      	movs	r0, #1
 8001308:	e7f2      	b.n	80012f0 <_scanf_i+0x1bc>
 800130a:	bf00      	nop
 800130c:	08001b38 	.word	0x08001b38
 8001310:	080018e1 	.word	0x080018e1
 8001314:	080019c1 	.word	0x080019c1
 8001318:	08001b58 	.word	0x08001b58

0800131c <__sflush_r>:
 800131c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001322:	0716      	lsls	r6, r2, #28
 8001324:	4605      	mov	r5, r0
 8001326:	460c      	mov	r4, r1
 8001328:	d454      	bmi.n	80013d4 <__sflush_r+0xb8>
 800132a:	684b      	ldr	r3, [r1, #4]
 800132c:	2b00      	cmp	r3, #0
 800132e:	dc02      	bgt.n	8001336 <__sflush_r+0x1a>
 8001330:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001332:	2b00      	cmp	r3, #0
 8001334:	dd48      	ble.n	80013c8 <__sflush_r+0xac>
 8001336:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001338:	2e00      	cmp	r6, #0
 800133a:	d045      	beq.n	80013c8 <__sflush_r+0xac>
 800133c:	2300      	movs	r3, #0
 800133e:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001342:	682f      	ldr	r7, [r5, #0]
 8001344:	6a21      	ldr	r1, [r4, #32]
 8001346:	602b      	str	r3, [r5, #0]
 8001348:	d030      	beq.n	80013ac <__sflush_r+0x90>
 800134a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800134c:	89a3      	ldrh	r3, [r4, #12]
 800134e:	0759      	lsls	r1, r3, #29
 8001350:	d505      	bpl.n	800135e <__sflush_r+0x42>
 8001352:	6863      	ldr	r3, [r4, #4]
 8001354:	1ad2      	subs	r2, r2, r3
 8001356:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001358:	b10b      	cbz	r3, 800135e <__sflush_r+0x42>
 800135a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800135c:	1ad2      	subs	r2, r2, r3
 800135e:	2300      	movs	r3, #0
 8001360:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001362:	6a21      	ldr	r1, [r4, #32]
 8001364:	4628      	mov	r0, r5
 8001366:	47b0      	blx	r6
 8001368:	1c43      	adds	r3, r0, #1
 800136a:	89a3      	ldrh	r3, [r4, #12]
 800136c:	d106      	bne.n	800137c <__sflush_r+0x60>
 800136e:	6829      	ldr	r1, [r5, #0]
 8001370:	291d      	cmp	r1, #29
 8001372:	d82b      	bhi.n	80013cc <__sflush_r+0xb0>
 8001374:	4a28      	ldr	r2, [pc, #160]	@ (8001418 <__sflush_r+0xfc>)
 8001376:	410a      	asrs	r2, r1
 8001378:	07d6      	lsls	r6, r2, #31
 800137a:	d427      	bmi.n	80013cc <__sflush_r+0xb0>
 800137c:	2200      	movs	r2, #0
 800137e:	6062      	str	r2, [r4, #4]
 8001380:	04d9      	lsls	r1, r3, #19
 8001382:	6922      	ldr	r2, [r4, #16]
 8001384:	6022      	str	r2, [r4, #0]
 8001386:	d504      	bpl.n	8001392 <__sflush_r+0x76>
 8001388:	1c42      	adds	r2, r0, #1
 800138a:	d101      	bne.n	8001390 <__sflush_r+0x74>
 800138c:	682b      	ldr	r3, [r5, #0]
 800138e:	b903      	cbnz	r3, 8001392 <__sflush_r+0x76>
 8001390:	6560      	str	r0, [r4, #84]	@ 0x54
 8001392:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001394:	602f      	str	r7, [r5, #0]
 8001396:	b1b9      	cbz	r1, 80013c8 <__sflush_r+0xac>
 8001398:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800139c:	4299      	cmp	r1, r3
 800139e:	d002      	beq.n	80013a6 <__sflush_r+0x8a>
 80013a0:	4628      	mov	r0, r5
 80013a2:	f7ff fbc5 	bl	8000b30 <_free_r>
 80013a6:	2300      	movs	r3, #0
 80013a8:	6363      	str	r3, [r4, #52]	@ 0x34
 80013aa:	e00d      	b.n	80013c8 <__sflush_r+0xac>
 80013ac:	2301      	movs	r3, #1
 80013ae:	4628      	mov	r0, r5
 80013b0:	47b0      	blx	r6
 80013b2:	4602      	mov	r2, r0
 80013b4:	1c50      	adds	r0, r2, #1
 80013b6:	d1c9      	bne.n	800134c <__sflush_r+0x30>
 80013b8:	682b      	ldr	r3, [r5, #0]
 80013ba:	2b00      	cmp	r3, #0
 80013bc:	d0c6      	beq.n	800134c <__sflush_r+0x30>
 80013be:	2b1d      	cmp	r3, #29
 80013c0:	d001      	beq.n	80013c6 <__sflush_r+0xaa>
 80013c2:	2b16      	cmp	r3, #22
 80013c4:	d11d      	bne.n	8001402 <__sflush_r+0xe6>
 80013c6:	602f      	str	r7, [r5, #0]
 80013c8:	2000      	movs	r0, #0
 80013ca:	e021      	b.n	8001410 <__sflush_r+0xf4>
 80013cc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80013d0:	b21b      	sxth	r3, r3
 80013d2:	e01a      	b.n	800140a <__sflush_r+0xee>
 80013d4:	690f      	ldr	r7, [r1, #16]
 80013d6:	2f00      	cmp	r7, #0
 80013d8:	d0f6      	beq.n	80013c8 <__sflush_r+0xac>
 80013da:	0793      	lsls	r3, r2, #30
 80013dc:	680e      	ldr	r6, [r1, #0]
 80013de:	bf08      	it	eq
 80013e0:	694b      	ldreq	r3, [r1, #20]
 80013e2:	600f      	str	r7, [r1, #0]
 80013e4:	bf18      	it	ne
 80013e6:	2300      	movne	r3, #0
 80013e8:	1bf6      	subs	r6, r6, r7
 80013ea:	608b      	str	r3, [r1, #8]
 80013ec:	2e00      	cmp	r6, #0
 80013ee:	ddeb      	ble.n	80013c8 <__sflush_r+0xac>
 80013f0:	6a21      	ldr	r1, [r4, #32]
 80013f2:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80013f6:	4633      	mov	r3, r6
 80013f8:	463a      	mov	r2, r7
 80013fa:	4628      	mov	r0, r5
 80013fc:	47e0      	blx	ip
 80013fe:	2800      	cmp	r0, #0
 8001400:	dc07      	bgt.n	8001412 <__sflush_r+0xf6>
 8001402:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001406:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800140a:	81a3      	strh	r3, [r4, #12]
 800140c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001410:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001412:	4407      	add	r7, r0
 8001414:	1a36      	subs	r6, r6, r0
 8001416:	e7e9      	b.n	80013ec <__sflush_r+0xd0>
 8001418:	dfbffffe 	.word	0xdfbffffe

0800141c <_fflush_r>:
 800141c:	b538      	push	{r3, r4, r5, lr}
 800141e:	690b      	ldr	r3, [r1, #16]
 8001420:	4605      	mov	r5, r0
 8001422:	460c      	mov	r4, r1
 8001424:	b913      	cbnz	r3, 800142c <_fflush_r+0x10>
 8001426:	2500      	movs	r5, #0
 8001428:	4628      	mov	r0, r5
 800142a:	bd38      	pop	{r3, r4, r5, pc}
 800142c:	b118      	cbz	r0, 8001436 <_fflush_r+0x1a>
 800142e:	6a03      	ldr	r3, [r0, #32]
 8001430:	b90b      	cbnz	r3, 8001436 <_fflush_r+0x1a>
 8001432:	f7ff fa75 	bl	8000920 <__sinit>
 8001436:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800143a:	2b00      	cmp	r3, #0
 800143c:	d0f3      	beq.n	8001426 <_fflush_r+0xa>
 800143e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001440:	07d0      	lsls	r0, r2, #31
 8001442:	d404      	bmi.n	800144e <_fflush_r+0x32>
 8001444:	0599      	lsls	r1, r3, #22
 8001446:	d402      	bmi.n	800144e <_fflush_r+0x32>
 8001448:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800144a:	f7ff fb6e 	bl	8000b2a <__retarget_lock_acquire_recursive>
 800144e:	4628      	mov	r0, r5
 8001450:	4621      	mov	r1, r4
 8001452:	f7ff ff63 	bl	800131c <__sflush_r>
 8001456:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001458:	07da      	lsls	r2, r3, #31
 800145a:	4605      	mov	r5, r0
 800145c:	d4e4      	bmi.n	8001428 <_fflush_r+0xc>
 800145e:	89a3      	ldrh	r3, [r4, #12]
 8001460:	059b      	lsls	r3, r3, #22
 8001462:	d4e1      	bmi.n	8001428 <_fflush_r+0xc>
 8001464:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001466:	f7ff fb61 	bl	8000b2c <__retarget_lock_release_recursive>
 800146a:	e7dd      	b.n	8001428 <_fflush_r+0xc>

0800146c <lflush>:
 800146c:	898b      	ldrh	r3, [r1, #12]
 800146e:	f003 0309 	and.w	r3, r3, #9
 8001472:	2b09      	cmp	r3, #9
 8001474:	d103      	bne.n	800147e <lflush+0x12>
 8001476:	4b03      	ldr	r3, [pc, #12]	@ (8001484 <lflush+0x18>)
 8001478:	6818      	ldr	r0, [r3, #0]
 800147a:	f7ff bfcf 	b.w	800141c <_fflush_r>
 800147e:	2000      	movs	r0, #0
 8001480:	4770      	bx	lr
 8001482:	bf00      	nop
 8001484:	2000000c 	.word	0x2000000c

08001488 <__srefill_r>:
 8001488:	b570      	push	{r4, r5, r6, lr}
 800148a:	460c      	mov	r4, r1
 800148c:	4605      	mov	r5, r0
 800148e:	b118      	cbz	r0, 8001498 <__srefill_r+0x10>
 8001490:	6a03      	ldr	r3, [r0, #32]
 8001492:	b90b      	cbnz	r3, 8001498 <__srefill_r+0x10>
 8001494:	f7ff fa44 	bl	8000920 <__sinit>
 8001498:	2300      	movs	r3, #0
 800149a:	6063      	str	r3, [r4, #4]
 800149c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014a0:	069e      	lsls	r6, r3, #26
 80014a2:	d408      	bmi.n	80014b6 <__srefill_r+0x2e>
 80014a4:	0758      	lsls	r0, r3, #29
 80014a6:	d445      	bmi.n	8001534 <__srefill_r+0xac>
 80014a8:	06d9      	lsls	r1, r3, #27
 80014aa:	d407      	bmi.n	80014bc <__srefill_r+0x34>
 80014ac:	2209      	movs	r2, #9
 80014ae:	602a      	str	r2, [r5, #0]
 80014b0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80014b4:	81a3      	strh	r3, [r4, #12]
 80014b6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80014ba:	bd70      	pop	{r4, r5, r6, pc}
 80014bc:	071a      	lsls	r2, r3, #28
 80014be:	d50b      	bpl.n	80014d8 <__srefill_r+0x50>
 80014c0:	4621      	mov	r1, r4
 80014c2:	4628      	mov	r0, r5
 80014c4:	f7ff ffaa 	bl	800141c <_fflush_r>
 80014c8:	2800      	cmp	r0, #0
 80014ca:	d1f4      	bne.n	80014b6 <__srefill_r+0x2e>
 80014cc:	89a3      	ldrh	r3, [r4, #12]
 80014ce:	60a0      	str	r0, [r4, #8]
 80014d0:	f023 0308 	bic.w	r3, r3, #8
 80014d4:	81a3      	strh	r3, [r4, #12]
 80014d6:	61a0      	str	r0, [r4, #24]
 80014d8:	89a3      	ldrh	r3, [r4, #12]
 80014da:	f043 0304 	orr.w	r3, r3, #4
 80014de:	81a3      	strh	r3, [r4, #12]
 80014e0:	6923      	ldr	r3, [r4, #16]
 80014e2:	b91b      	cbnz	r3, 80014ec <__srefill_r+0x64>
 80014e4:	4621      	mov	r1, r4
 80014e6:	4628      	mov	r0, r5
 80014e8:	f000 fa92 	bl	8001a10 <__smakebuf_r>
 80014ec:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80014f0:	07b3      	lsls	r3, r6, #30
 80014f2:	d00f      	beq.n	8001514 <__srefill_r+0x8c>
 80014f4:	2301      	movs	r3, #1
 80014f6:	4a1b      	ldr	r2, [pc, #108]	@ (8001564 <__srefill_r+0xdc>)
 80014f8:	491b      	ldr	r1, [pc, #108]	@ (8001568 <__srefill_r+0xe0>)
 80014fa:	481c      	ldr	r0, [pc, #112]	@ (800156c <__srefill_r+0xe4>)
 80014fc:	81a3      	strh	r3, [r4, #12]
 80014fe:	f7ff fa27 	bl	8000950 <_fwalk_sglue>
 8001502:	81a6      	strh	r6, [r4, #12]
 8001504:	f006 0609 	and.w	r6, r6, #9
 8001508:	2e09      	cmp	r6, #9
 800150a:	d103      	bne.n	8001514 <__srefill_r+0x8c>
 800150c:	4621      	mov	r1, r4
 800150e:	4628      	mov	r0, r5
 8001510:	f7ff ff04 	bl	800131c <__sflush_r>
 8001514:	6922      	ldr	r2, [r4, #16]
 8001516:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 8001518:	6963      	ldr	r3, [r4, #20]
 800151a:	6a21      	ldr	r1, [r4, #32]
 800151c:	6022      	str	r2, [r4, #0]
 800151e:	4628      	mov	r0, r5
 8001520:	47b0      	blx	r6
 8001522:	2800      	cmp	r0, #0
 8001524:	6060      	str	r0, [r4, #4]
 8001526:	dc17      	bgt.n	8001558 <__srefill_r+0xd0>
 8001528:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800152c:	d116      	bne.n	800155c <__srefill_r+0xd4>
 800152e:	f043 0320 	orr.w	r3, r3, #32
 8001532:	e7bf      	b.n	80014b4 <__srefill_r+0x2c>
 8001534:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001536:	2900      	cmp	r1, #0
 8001538:	d0d2      	beq.n	80014e0 <__srefill_r+0x58>
 800153a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800153e:	4299      	cmp	r1, r3
 8001540:	d002      	beq.n	8001548 <__srefill_r+0xc0>
 8001542:	4628      	mov	r0, r5
 8001544:	f7ff faf4 	bl	8000b30 <_free_r>
 8001548:	2300      	movs	r3, #0
 800154a:	6363      	str	r3, [r4, #52]	@ 0x34
 800154c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800154e:	6063      	str	r3, [r4, #4]
 8001550:	2b00      	cmp	r3, #0
 8001552:	d0c5      	beq.n	80014e0 <__srefill_r+0x58>
 8001554:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8001556:	6023      	str	r3, [r4, #0]
 8001558:	2000      	movs	r0, #0
 800155a:	e7ae      	b.n	80014ba <__srefill_r+0x32>
 800155c:	2200      	movs	r2, #0
 800155e:	6062      	str	r2, [r4, #4]
 8001560:	e7a6      	b.n	80014b0 <__srefill_r+0x28>
 8001562:	bf00      	nop
 8001564:	20000000 	.word	0x20000000
 8001568:	0800146d 	.word	0x0800146d
 800156c:	20000010 	.word	0x20000010

08001570 <__sccl>:
 8001570:	b570      	push	{r4, r5, r6, lr}
 8001572:	780b      	ldrb	r3, [r1, #0]
 8001574:	4604      	mov	r4, r0
 8001576:	2b5e      	cmp	r3, #94	@ 0x5e
 8001578:	bf0b      	itete	eq
 800157a:	784b      	ldrbeq	r3, [r1, #1]
 800157c:	1c4a      	addne	r2, r1, #1
 800157e:	1c8a      	addeq	r2, r1, #2
 8001580:	2100      	movne	r1, #0
 8001582:	bf08      	it	eq
 8001584:	2101      	moveq	r1, #1
 8001586:	3801      	subs	r0, #1
 8001588:	f104 05ff 	add.w	r5, r4, #255	@ 0xff
 800158c:	f800 1f01 	strb.w	r1, [r0, #1]!
 8001590:	42a8      	cmp	r0, r5
 8001592:	d1fb      	bne.n	800158c <__sccl+0x1c>
 8001594:	b90b      	cbnz	r3, 800159a <__sccl+0x2a>
 8001596:	1e50      	subs	r0, r2, #1
 8001598:	bd70      	pop	{r4, r5, r6, pc}
 800159a:	f081 0101 	eor.w	r1, r1, #1
 800159e:	54e1      	strb	r1, [r4, r3]
 80015a0:	4610      	mov	r0, r2
 80015a2:	4602      	mov	r2, r0
 80015a4:	f812 5b01 	ldrb.w	r5, [r2], #1
 80015a8:	2d2d      	cmp	r5, #45	@ 0x2d
 80015aa:	d005      	beq.n	80015b8 <__sccl+0x48>
 80015ac:	2d5d      	cmp	r5, #93	@ 0x5d
 80015ae:	d016      	beq.n	80015de <__sccl+0x6e>
 80015b0:	2d00      	cmp	r5, #0
 80015b2:	d0f1      	beq.n	8001598 <__sccl+0x28>
 80015b4:	462b      	mov	r3, r5
 80015b6:	e7f2      	b.n	800159e <__sccl+0x2e>
 80015b8:	7846      	ldrb	r6, [r0, #1]
 80015ba:	2e5d      	cmp	r6, #93	@ 0x5d
 80015bc:	d0fa      	beq.n	80015b4 <__sccl+0x44>
 80015be:	42b3      	cmp	r3, r6
 80015c0:	dcf8      	bgt.n	80015b4 <__sccl+0x44>
 80015c2:	3002      	adds	r0, #2
 80015c4:	461a      	mov	r2, r3
 80015c6:	3201      	adds	r2, #1
 80015c8:	4296      	cmp	r6, r2
 80015ca:	54a1      	strb	r1, [r4, r2]
 80015cc:	dcfb      	bgt.n	80015c6 <__sccl+0x56>
 80015ce:	1af2      	subs	r2, r6, r3
 80015d0:	3a01      	subs	r2, #1
 80015d2:	1c5d      	adds	r5, r3, #1
 80015d4:	42b3      	cmp	r3, r6
 80015d6:	bfa8      	it	ge
 80015d8:	2200      	movge	r2, #0
 80015da:	18ab      	adds	r3, r5, r2
 80015dc:	e7e1      	b.n	80015a2 <__sccl+0x32>
 80015de:	4610      	mov	r0, r2
 80015e0:	e7da      	b.n	8001598 <__sccl+0x28>

080015e2 <__submore>:
 80015e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80015e6:	460c      	mov	r4, r1
 80015e8:	6b49      	ldr	r1, [r1, #52]	@ 0x34
 80015ea:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80015ee:	4299      	cmp	r1, r3
 80015f0:	d11d      	bne.n	800162e <__submore+0x4c>
 80015f2:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80015f6:	f7ff fb07 	bl	8000c08 <_malloc_r>
 80015fa:	b918      	cbnz	r0, 8001604 <__submore+0x22>
 80015fc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001604:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001608:	63a3      	str	r3, [r4, #56]	@ 0x38
 800160a:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 800160e:	6360      	str	r0, [r4, #52]	@ 0x34
 8001610:	f880 33ff 	strb.w	r3, [r0, #1023]	@ 0x3ff
 8001614:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8001618:	f880 33fe 	strb.w	r3, [r0, #1022]	@ 0x3fe
 800161c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8001620:	f880 33fd 	strb.w	r3, [r0, #1021]	@ 0x3fd
 8001624:	f200 30fd 	addw	r0, r0, #1021	@ 0x3fd
 8001628:	6020      	str	r0, [r4, #0]
 800162a:	2000      	movs	r0, #0
 800162c:	e7e8      	b.n	8001600 <__submore+0x1e>
 800162e:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
 8001630:	0077      	lsls	r7, r6, #1
 8001632:	463a      	mov	r2, r7
 8001634:	f000 f8ac 	bl	8001790 <_realloc_r>
 8001638:	4605      	mov	r5, r0
 800163a:	2800      	cmp	r0, #0
 800163c:	d0de      	beq.n	80015fc <__submore+0x1a>
 800163e:	eb00 0806 	add.w	r8, r0, r6
 8001642:	4601      	mov	r1, r0
 8001644:	4632      	mov	r2, r6
 8001646:	4640      	mov	r0, r8
 8001648:	f000 f894 	bl	8001774 <memcpy>
 800164c:	e9c4 570d 	strd	r5, r7, [r4, #52]	@ 0x34
 8001650:	f8c4 8000 	str.w	r8, [r4]
 8001654:	e7e9      	b.n	800162a <__submore+0x48>

08001656 <_ungetc_r>:
 8001656:	b570      	push	{r4, r5, r6, lr}
 8001658:	460d      	mov	r5, r1
 800165a:	1c69      	adds	r1, r5, #1
 800165c:	4606      	mov	r6, r0
 800165e:	4614      	mov	r4, r2
 8001660:	d01e      	beq.n	80016a0 <_ungetc_r+0x4a>
 8001662:	b118      	cbz	r0, 800166c <_ungetc_r+0x16>
 8001664:	6a03      	ldr	r3, [r0, #32]
 8001666:	b90b      	cbnz	r3, 800166c <_ungetc_r+0x16>
 8001668:	f7ff f95a 	bl	8000920 <__sinit>
 800166c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800166e:	07da      	lsls	r2, r3, #31
 8001670:	d405      	bmi.n	800167e <_ungetc_r+0x28>
 8001672:	89a3      	ldrh	r3, [r4, #12]
 8001674:	059b      	lsls	r3, r3, #22
 8001676:	d402      	bmi.n	800167e <_ungetc_r+0x28>
 8001678:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800167a:	f7ff fa56 	bl	8000b2a <__retarget_lock_acquire_recursive>
 800167e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001682:	f023 0220 	bic.w	r2, r3, #32
 8001686:	0758      	lsls	r0, r3, #29
 8001688:	81a2      	strh	r2, [r4, #12]
 800168a:	d422      	bmi.n	80016d2 <_ungetc_r+0x7c>
 800168c:	06d9      	lsls	r1, r3, #27
 800168e:	d40a      	bmi.n	80016a6 <_ungetc_r+0x50>
 8001690:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001692:	07d2      	lsls	r2, r2, #31
 8001694:	d404      	bmi.n	80016a0 <_ungetc_r+0x4a>
 8001696:	0599      	lsls	r1, r3, #22
 8001698:	d402      	bmi.n	80016a0 <_ungetc_r+0x4a>
 800169a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800169c:	f7ff fa46 	bl	8000b2c <__retarget_lock_release_recursive>
 80016a0:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 80016a4:	e046      	b.n	8001734 <_ungetc_r+0xde>
 80016a6:	071b      	lsls	r3, r3, #28
 80016a8:	d50f      	bpl.n	80016ca <_ungetc_r+0x74>
 80016aa:	4621      	mov	r1, r4
 80016ac:	4630      	mov	r0, r6
 80016ae:	f7ff feb5 	bl	800141c <_fflush_r>
 80016b2:	b120      	cbz	r0, 80016be <_ungetc_r+0x68>
 80016b4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80016b6:	07d8      	lsls	r0, r3, #31
 80016b8:	d4f2      	bmi.n	80016a0 <_ungetc_r+0x4a>
 80016ba:	89a3      	ldrh	r3, [r4, #12]
 80016bc:	e7eb      	b.n	8001696 <_ungetc_r+0x40>
 80016be:	89a3      	ldrh	r3, [r4, #12]
 80016c0:	60a0      	str	r0, [r4, #8]
 80016c2:	f023 0308 	bic.w	r3, r3, #8
 80016c6:	81a3      	strh	r3, [r4, #12]
 80016c8:	61a0      	str	r0, [r4, #24]
 80016ca:	89a3      	ldrh	r3, [r4, #12]
 80016cc:	f043 0304 	orr.w	r3, r3, #4
 80016d0:	81a3      	strh	r3, [r4, #12]
 80016d2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80016d4:	6862      	ldr	r2, [r4, #4]
 80016d6:	b2ed      	uxtb	r5, r5
 80016d8:	b1d3      	cbz	r3, 8001710 <_ungetc_r+0xba>
 80016da:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80016dc:	4293      	cmp	r3, r2
 80016de:	dc05      	bgt.n	80016ec <_ungetc_r+0x96>
 80016e0:	4621      	mov	r1, r4
 80016e2:	4630      	mov	r0, r6
 80016e4:	f7ff ff7d 	bl	80015e2 <__submore>
 80016e8:	2800      	cmp	r0, #0
 80016ea:	d1e3      	bne.n	80016b4 <_ungetc_r+0x5e>
 80016ec:	6823      	ldr	r3, [r4, #0]
 80016ee:	1e5a      	subs	r2, r3, #1
 80016f0:	6022      	str	r2, [r4, #0]
 80016f2:	f803 5c01 	strb.w	r5, [r3, #-1]
 80016f6:	6863      	ldr	r3, [r4, #4]
 80016f8:	3301      	adds	r3, #1
 80016fa:	6063      	str	r3, [r4, #4]
 80016fc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80016fe:	07da      	lsls	r2, r3, #31
 8001700:	d418      	bmi.n	8001734 <_ungetc_r+0xde>
 8001702:	89a3      	ldrh	r3, [r4, #12]
 8001704:	059b      	lsls	r3, r3, #22
 8001706:	d415      	bmi.n	8001734 <_ungetc_r+0xde>
 8001708:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800170a:	f7ff fa0f 	bl	8000b2c <__retarget_lock_release_recursive>
 800170e:	e011      	b.n	8001734 <_ungetc_r+0xde>
 8001710:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 8001712:	6920      	ldr	r0, [r4, #16]
 8001714:	6823      	ldr	r3, [r4, #0]
 8001716:	f001 0101 	and.w	r1, r1, #1
 800171a:	b168      	cbz	r0, 8001738 <_ungetc_r+0xe2>
 800171c:	4298      	cmp	r0, r3
 800171e:	d20b      	bcs.n	8001738 <_ungetc_r+0xe2>
 8001720:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8001724:	42a8      	cmp	r0, r5
 8001726:	d107      	bne.n	8001738 <_ungetc_r+0xe2>
 8001728:	3b01      	subs	r3, #1
 800172a:	3201      	adds	r2, #1
 800172c:	6023      	str	r3, [r4, #0]
 800172e:	6062      	str	r2, [r4, #4]
 8001730:	2900      	cmp	r1, #0
 8001732:	d0e6      	beq.n	8001702 <_ungetc_r+0xac>
 8001734:	4628      	mov	r0, r5
 8001736:	bd70      	pop	{r4, r5, r6, pc}
 8001738:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 800173c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001740:	6363      	str	r3, [r4, #52]	@ 0x34
 8001742:	2303      	movs	r3, #3
 8001744:	63a3      	str	r3, [r4, #56]	@ 0x38
 8001746:	4623      	mov	r3, r4
 8001748:	f803 5f46 	strb.w	r5, [r3, #70]!
 800174c:	6023      	str	r3, [r4, #0]
 800174e:	2301      	movs	r3, #1
 8001750:	6063      	str	r3, [r4, #4]
 8001752:	e7ed      	b.n	8001730 <_ungetc_r+0xda>

08001754 <_sbrk_r>:
 8001754:	b538      	push	{r3, r4, r5, lr}
 8001756:	4d06      	ldr	r5, [pc, #24]	@ (8001770 <_sbrk_r+0x1c>)
 8001758:	2300      	movs	r3, #0
 800175a:	4604      	mov	r4, r0
 800175c:	4608      	mov	r0, r1
 800175e:	602b      	str	r3, [r5, #0]
 8001760:	f7fe fee0 	bl	8000524 <_sbrk>
 8001764:	1c43      	adds	r3, r0, #1
 8001766:	d102      	bne.n	800176e <_sbrk_r+0x1a>
 8001768:	682b      	ldr	r3, [r5, #0]
 800176a:	b103      	cbz	r3, 800176e <_sbrk_r+0x1a>
 800176c:	6023      	str	r3, [r4, #0]
 800176e:	bd38      	pop	{r3, r4, r5, pc}
 8001770:	200001b8 	.word	0x200001b8

08001774 <memcpy>:
 8001774:	440a      	add	r2, r1
 8001776:	4291      	cmp	r1, r2
 8001778:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 800177c:	d100      	bne.n	8001780 <memcpy+0xc>
 800177e:	4770      	bx	lr
 8001780:	b510      	push	{r4, lr}
 8001782:	f811 4b01 	ldrb.w	r4, [r1], #1
 8001786:	f803 4f01 	strb.w	r4, [r3, #1]!
 800178a:	4291      	cmp	r1, r2
 800178c:	d1f9      	bne.n	8001782 <memcpy+0xe>
 800178e:	bd10      	pop	{r4, pc}

08001790 <_realloc_r>:
 8001790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001794:	4680      	mov	r8, r0
 8001796:	4615      	mov	r5, r2
 8001798:	460c      	mov	r4, r1
 800179a:	b921      	cbnz	r1, 80017a6 <_realloc_r+0x16>
 800179c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80017a0:	4611      	mov	r1, r2
 80017a2:	f7ff ba31 	b.w	8000c08 <_malloc_r>
 80017a6:	b92a      	cbnz	r2, 80017b4 <_realloc_r+0x24>
 80017a8:	f7ff f9c2 	bl	8000b30 <_free_r>
 80017ac:	2400      	movs	r4, #0
 80017ae:	4620      	mov	r0, r4
 80017b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80017b4:	f000 f98a 	bl	8001acc <_malloc_usable_size_r>
 80017b8:	4285      	cmp	r5, r0
 80017ba:	4606      	mov	r6, r0
 80017bc:	d802      	bhi.n	80017c4 <_realloc_r+0x34>
 80017be:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80017c2:	d8f4      	bhi.n	80017ae <_realloc_r+0x1e>
 80017c4:	4629      	mov	r1, r5
 80017c6:	4640      	mov	r0, r8
 80017c8:	f7ff fa1e 	bl	8000c08 <_malloc_r>
 80017cc:	4607      	mov	r7, r0
 80017ce:	2800      	cmp	r0, #0
 80017d0:	d0ec      	beq.n	80017ac <_realloc_r+0x1c>
 80017d2:	42b5      	cmp	r5, r6
 80017d4:	462a      	mov	r2, r5
 80017d6:	4621      	mov	r1, r4
 80017d8:	bf28      	it	cs
 80017da:	4632      	movcs	r2, r6
 80017dc:	f7ff ffca 	bl	8001774 <memcpy>
 80017e0:	4621      	mov	r1, r4
 80017e2:	4640      	mov	r0, r8
 80017e4:	f7ff f9a4 	bl	8000b30 <_free_r>
 80017e8:	463c      	mov	r4, r7
 80017ea:	e7e0      	b.n	80017ae <_realloc_r+0x1e>

080017ec <_strtol_l.constprop.0>:
 80017ec:	2b24      	cmp	r3, #36	@ 0x24
 80017ee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80017f2:	4686      	mov	lr, r0
 80017f4:	4690      	mov	r8, r2
 80017f6:	d801      	bhi.n	80017fc <_strtol_l.constprop.0+0x10>
 80017f8:	2b01      	cmp	r3, #1
 80017fa:	d106      	bne.n	800180a <_strtol_l.constprop.0+0x1e>
 80017fc:	f7ff f96a 	bl	8000ad4 <__errno>
 8001800:	2316      	movs	r3, #22
 8001802:	6003      	str	r3, [r0, #0]
 8001804:	2000      	movs	r0, #0
 8001806:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800180a:	4834      	ldr	r0, [pc, #208]	@ (80018dc <_strtol_l.constprop.0+0xf0>)
 800180c:	460d      	mov	r5, r1
 800180e:	462a      	mov	r2, r5
 8001810:	f815 4b01 	ldrb.w	r4, [r5], #1
 8001814:	5d06      	ldrb	r6, [r0, r4]
 8001816:	f016 0608 	ands.w	r6, r6, #8
 800181a:	d1f8      	bne.n	800180e <_strtol_l.constprop.0+0x22>
 800181c:	2c2d      	cmp	r4, #45	@ 0x2d
 800181e:	d12d      	bne.n	800187c <_strtol_l.constprop.0+0x90>
 8001820:	782c      	ldrb	r4, [r5, #0]
 8001822:	2601      	movs	r6, #1
 8001824:	1c95      	adds	r5, r2, #2
 8001826:	f033 0210 	bics.w	r2, r3, #16
 800182a:	d109      	bne.n	8001840 <_strtol_l.constprop.0+0x54>
 800182c:	2c30      	cmp	r4, #48	@ 0x30
 800182e:	d12a      	bne.n	8001886 <_strtol_l.constprop.0+0x9a>
 8001830:	782a      	ldrb	r2, [r5, #0]
 8001832:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8001836:	2a58      	cmp	r2, #88	@ 0x58
 8001838:	d125      	bne.n	8001886 <_strtol_l.constprop.0+0x9a>
 800183a:	786c      	ldrb	r4, [r5, #1]
 800183c:	2310      	movs	r3, #16
 800183e:	3502      	adds	r5, #2
 8001840:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8001844:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8001848:	2200      	movs	r2, #0
 800184a:	fbbc f9f3 	udiv	r9, ip, r3
 800184e:	4610      	mov	r0, r2
 8001850:	fb03 ca19 	mls	sl, r3, r9, ip
 8001854:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8001858:	2f09      	cmp	r7, #9
 800185a:	d81b      	bhi.n	8001894 <_strtol_l.constprop.0+0xa8>
 800185c:	463c      	mov	r4, r7
 800185e:	42a3      	cmp	r3, r4
 8001860:	dd27      	ble.n	80018b2 <_strtol_l.constprop.0+0xc6>
 8001862:	1c57      	adds	r7, r2, #1
 8001864:	d007      	beq.n	8001876 <_strtol_l.constprop.0+0x8a>
 8001866:	4581      	cmp	r9, r0
 8001868:	d320      	bcc.n	80018ac <_strtol_l.constprop.0+0xc0>
 800186a:	d101      	bne.n	8001870 <_strtol_l.constprop.0+0x84>
 800186c:	45a2      	cmp	sl, r4
 800186e:	db1d      	blt.n	80018ac <_strtol_l.constprop.0+0xc0>
 8001870:	fb00 4003 	mla	r0, r0, r3, r4
 8001874:	2201      	movs	r2, #1
 8001876:	f815 4b01 	ldrb.w	r4, [r5], #1
 800187a:	e7eb      	b.n	8001854 <_strtol_l.constprop.0+0x68>
 800187c:	2c2b      	cmp	r4, #43	@ 0x2b
 800187e:	bf04      	itt	eq
 8001880:	782c      	ldrbeq	r4, [r5, #0]
 8001882:	1c95      	addeq	r5, r2, #2
 8001884:	e7cf      	b.n	8001826 <_strtol_l.constprop.0+0x3a>
 8001886:	2b00      	cmp	r3, #0
 8001888:	d1da      	bne.n	8001840 <_strtol_l.constprop.0+0x54>
 800188a:	2c30      	cmp	r4, #48	@ 0x30
 800188c:	bf0c      	ite	eq
 800188e:	2308      	moveq	r3, #8
 8001890:	230a      	movne	r3, #10
 8001892:	e7d5      	b.n	8001840 <_strtol_l.constprop.0+0x54>
 8001894:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8001898:	2f19      	cmp	r7, #25
 800189a:	d801      	bhi.n	80018a0 <_strtol_l.constprop.0+0xb4>
 800189c:	3c37      	subs	r4, #55	@ 0x37
 800189e:	e7de      	b.n	800185e <_strtol_l.constprop.0+0x72>
 80018a0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 80018a4:	2f19      	cmp	r7, #25
 80018a6:	d804      	bhi.n	80018b2 <_strtol_l.constprop.0+0xc6>
 80018a8:	3c57      	subs	r4, #87	@ 0x57
 80018aa:	e7d8      	b.n	800185e <_strtol_l.constprop.0+0x72>
 80018ac:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80018b0:	e7e1      	b.n	8001876 <_strtol_l.constprop.0+0x8a>
 80018b2:	1c53      	adds	r3, r2, #1
 80018b4:	d108      	bne.n	80018c8 <_strtol_l.constprop.0+0xdc>
 80018b6:	2322      	movs	r3, #34	@ 0x22
 80018b8:	f8ce 3000 	str.w	r3, [lr]
 80018bc:	4660      	mov	r0, ip
 80018be:	f1b8 0f00 	cmp.w	r8, #0
 80018c2:	d0a0      	beq.n	8001806 <_strtol_l.constprop.0+0x1a>
 80018c4:	1e69      	subs	r1, r5, #1
 80018c6:	e006      	b.n	80018d6 <_strtol_l.constprop.0+0xea>
 80018c8:	b106      	cbz	r6, 80018cc <_strtol_l.constprop.0+0xe0>
 80018ca:	4240      	negs	r0, r0
 80018cc:	f1b8 0f00 	cmp.w	r8, #0
 80018d0:	d099      	beq.n	8001806 <_strtol_l.constprop.0+0x1a>
 80018d2:	2a00      	cmp	r2, #0
 80018d4:	d1f6      	bne.n	80018c4 <_strtol_l.constprop.0+0xd8>
 80018d6:	f8c8 1000 	str.w	r1, [r8]
 80018da:	e794      	b.n	8001806 <_strtol_l.constprop.0+0x1a>
 80018dc:	08001b64 	.word	0x08001b64

080018e0 <_strtol_r>:
 80018e0:	f7ff bf84 	b.w	80017ec <_strtol_l.constprop.0>

080018e4 <_strtoul_l.constprop.0>:
 80018e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80018e8:	4e34      	ldr	r6, [pc, #208]	@ (80019bc <_strtoul_l.constprop.0+0xd8>)
 80018ea:	4686      	mov	lr, r0
 80018ec:	460d      	mov	r5, r1
 80018ee:	4628      	mov	r0, r5
 80018f0:	f815 4b01 	ldrb.w	r4, [r5], #1
 80018f4:	5d37      	ldrb	r7, [r6, r4]
 80018f6:	f017 0708 	ands.w	r7, r7, #8
 80018fa:	d1f8      	bne.n	80018ee <_strtoul_l.constprop.0+0xa>
 80018fc:	2c2d      	cmp	r4, #45	@ 0x2d
 80018fe:	d12f      	bne.n	8001960 <_strtoul_l.constprop.0+0x7c>
 8001900:	782c      	ldrb	r4, [r5, #0]
 8001902:	2701      	movs	r7, #1
 8001904:	1c85      	adds	r5, r0, #2
 8001906:	f033 0010 	bics.w	r0, r3, #16
 800190a:	d109      	bne.n	8001920 <_strtoul_l.constprop.0+0x3c>
 800190c:	2c30      	cmp	r4, #48	@ 0x30
 800190e:	d12c      	bne.n	800196a <_strtoul_l.constprop.0+0x86>
 8001910:	7828      	ldrb	r0, [r5, #0]
 8001912:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
 8001916:	2858      	cmp	r0, #88	@ 0x58
 8001918:	d127      	bne.n	800196a <_strtoul_l.constprop.0+0x86>
 800191a:	786c      	ldrb	r4, [r5, #1]
 800191c:	2310      	movs	r3, #16
 800191e:	3502      	adds	r5, #2
 8001920:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
 8001924:	2600      	movs	r6, #0
 8001926:	fbb8 f8f3 	udiv	r8, r8, r3
 800192a:	fb03 f908 	mul.w	r9, r3, r8
 800192e:	ea6f 0909 	mvn.w	r9, r9
 8001932:	4630      	mov	r0, r6
 8001934:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8001938:	f1bc 0f09 	cmp.w	ip, #9
 800193c:	d81c      	bhi.n	8001978 <_strtoul_l.constprop.0+0x94>
 800193e:	4664      	mov	r4, ip
 8001940:	42a3      	cmp	r3, r4
 8001942:	dd2a      	ble.n	800199a <_strtoul_l.constprop.0+0xb6>
 8001944:	f1b6 3fff 	cmp.w	r6, #4294967295	@ 0xffffffff
 8001948:	d007      	beq.n	800195a <_strtoul_l.constprop.0+0x76>
 800194a:	4580      	cmp	r8, r0
 800194c:	d322      	bcc.n	8001994 <_strtoul_l.constprop.0+0xb0>
 800194e:	d101      	bne.n	8001954 <_strtoul_l.constprop.0+0x70>
 8001950:	45a1      	cmp	r9, r4
 8001952:	db1f      	blt.n	8001994 <_strtoul_l.constprop.0+0xb0>
 8001954:	fb00 4003 	mla	r0, r0, r3, r4
 8001958:	2601      	movs	r6, #1
 800195a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800195e:	e7e9      	b.n	8001934 <_strtoul_l.constprop.0+0x50>
 8001960:	2c2b      	cmp	r4, #43	@ 0x2b
 8001962:	bf04      	itt	eq
 8001964:	782c      	ldrbeq	r4, [r5, #0]
 8001966:	1c85      	addeq	r5, r0, #2
 8001968:	e7cd      	b.n	8001906 <_strtoul_l.constprop.0+0x22>
 800196a:	2b00      	cmp	r3, #0
 800196c:	d1d8      	bne.n	8001920 <_strtoul_l.constprop.0+0x3c>
 800196e:	2c30      	cmp	r4, #48	@ 0x30
 8001970:	bf0c      	ite	eq
 8001972:	2308      	moveq	r3, #8
 8001974:	230a      	movne	r3, #10
 8001976:	e7d3      	b.n	8001920 <_strtoul_l.constprop.0+0x3c>
 8001978:	f1a4 0c41 	sub.w	ip, r4, #65	@ 0x41
 800197c:	f1bc 0f19 	cmp.w	ip, #25
 8001980:	d801      	bhi.n	8001986 <_strtoul_l.constprop.0+0xa2>
 8001982:	3c37      	subs	r4, #55	@ 0x37
 8001984:	e7dc      	b.n	8001940 <_strtoul_l.constprop.0+0x5c>
 8001986:	f1a4 0c61 	sub.w	ip, r4, #97	@ 0x61
 800198a:	f1bc 0f19 	cmp.w	ip, #25
 800198e:	d804      	bhi.n	800199a <_strtoul_l.constprop.0+0xb6>
 8001990:	3c57      	subs	r4, #87	@ 0x57
 8001992:	e7d5      	b.n	8001940 <_strtoul_l.constprop.0+0x5c>
 8001994:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 8001998:	e7df      	b.n	800195a <_strtoul_l.constprop.0+0x76>
 800199a:	1c73      	adds	r3, r6, #1
 800199c:	d106      	bne.n	80019ac <_strtoul_l.constprop.0+0xc8>
 800199e:	2322      	movs	r3, #34	@ 0x22
 80019a0:	f8ce 3000 	str.w	r3, [lr]
 80019a4:	4630      	mov	r0, r6
 80019a6:	b932      	cbnz	r2, 80019b6 <_strtoul_l.constprop.0+0xd2>
 80019a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80019ac:	b107      	cbz	r7, 80019b0 <_strtoul_l.constprop.0+0xcc>
 80019ae:	4240      	negs	r0, r0
 80019b0:	2a00      	cmp	r2, #0
 80019b2:	d0f9      	beq.n	80019a8 <_strtoul_l.constprop.0+0xc4>
 80019b4:	b106      	cbz	r6, 80019b8 <_strtoul_l.constprop.0+0xd4>
 80019b6:	1e69      	subs	r1, r5, #1
 80019b8:	6011      	str	r1, [r2, #0]
 80019ba:	e7f5      	b.n	80019a8 <_strtoul_l.constprop.0+0xc4>
 80019bc:	08001b64 	.word	0x08001b64

080019c0 <_strtoul_r>:
 80019c0:	f7ff bf90 	b.w	80018e4 <_strtoul_l.constprop.0>

080019c4 <__swhatbuf_r>:
 80019c4:	b570      	push	{r4, r5, r6, lr}
 80019c6:	460c      	mov	r4, r1
 80019c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80019cc:	2900      	cmp	r1, #0
 80019ce:	b096      	sub	sp, #88	@ 0x58
 80019d0:	4615      	mov	r5, r2
 80019d2:	461e      	mov	r6, r3
 80019d4:	da0d      	bge.n	80019f2 <__swhatbuf_r+0x2e>
 80019d6:	89a3      	ldrh	r3, [r4, #12]
 80019d8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80019dc:	f04f 0100 	mov.w	r1, #0
 80019e0:	bf14      	ite	ne
 80019e2:	2340      	movne	r3, #64	@ 0x40
 80019e4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80019e8:	2000      	movs	r0, #0
 80019ea:	6031      	str	r1, [r6, #0]
 80019ec:	602b      	str	r3, [r5, #0]
 80019ee:	b016      	add	sp, #88	@ 0x58
 80019f0:	bd70      	pop	{r4, r5, r6, pc}
 80019f2:	466a      	mov	r2, sp
 80019f4:	f000 f848 	bl	8001a88 <_fstat_r>
 80019f8:	2800      	cmp	r0, #0
 80019fa:	dbec      	blt.n	80019d6 <__swhatbuf_r+0x12>
 80019fc:	9901      	ldr	r1, [sp, #4]
 80019fe:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001a02:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001a06:	4259      	negs	r1, r3
 8001a08:	4159      	adcs	r1, r3
 8001a0a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001a0e:	e7eb      	b.n	80019e8 <__swhatbuf_r+0x24>

08001a10 <__smakebuf_r>:
 8001a10:	898b      	ldrh	r3, [r1, #12]
 8001a12:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001a14:	079d      	lsls	r5, r3, #30
 8001a16:	4606      	mov	r6, r0
 8001a18:	460c      	mov	r4, r1
 8001a1a:	d507      	bpl.n	8001a2c <__smakebuf_r+0x1c>
 8001a1c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001a20:	6023      	str	r3, [r4, #0]
 8001a22:	6123      	str	r3, [r4, #16]
 8001a24:	2301      	movs	r3, #1
 8001a26:	6163      	str	r3, [r4, #20]
 8001a28:	b003      	add	sp, #12
 8001a2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a2c:	ab01      	add	r3, sp, #4
 8001a2e:	466a      	mov	r2, sp
 8001a30:	f7ff ffc8 	bl	80019c4 <__swhatbuf_r>
 8001a34:	9f00      	ldr	r7, [sp, #0]
 8001a36:	4605      	mov	r5, r0
 8001a38:	4639      	mov	r1, r7
 8001a3a:	4630      	mov	r0, r6
 8001a3c:	f7ff f8e4 	bl	8000c08 <_malloc_r>
 8001a40:	b948      	cbnz	r0, 8001a56 <__smakebuf_r+0x46>
 8001a42:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001a46:	059a      	lsls	r2, r3, #22
 8001a48:	d4ee      	bmi.n	8001a28 <__smakebuf_r+0x18>
 8001a4a:	f023 0303 	bic.w	r3, r3, #3
 8001a4e:	f043 0302 	orr.w	r3, r3, #2
 8001a52:	81a3      	strh	r3, [r4, #12]
 8001a54:	e7e2      	b.n	8001a1c <__smakebuf_r+0xc>
 8001a56:	89a3      	ldrh	r3, [r4, #12]
 8001a58:	6020      	str	r0, [r4, #0]
 8001a5a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001a5e:	81a3      	strh	r3, [r4, #12]
 8001a60:	9b01      	ldr	r3, [sp, #4]
 8001a62:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001a66:	b15b      	cbz	r3, 8001a80 <__smakebuf_r+0x70>
 8001a68:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001a6c:	4630      	mov	r0, r6
 8001a6e:	f000 f81d 	bl	8001aac <_isatty_r>
 8001a72:	b128      	cbz	r0, 8001a80 <__smakebuf_r+0x70>
 8001a74:	89a3      	ldrh	r3, [r4, #12]
 8001a76:	f023 0303 	bic.w	r3, r3, #3
 8001a7a:	f043 0301 	orr.w	r3, r3, #1
 8001a7e:	81a3      	strh	r3, [r4, #12]
 8001a80:	89a3      	ldrh	r3, [r4, #12]
 8001a82:	431d      	orrs	r5, r3
 8001a84:	81a5      	strh	r5, [r4, #12]
 8001a86:	e7cf      	b.n	8001a28 <__smakebuf_r+0x18>

08001a88 <_fstat_r>:
 8001a88:	b538      	push	{r3, r4, r5, lr}
 8001a8a:	4d07      	ldr	r5, [pc, #28]	@ (8001aa8 <_fstat_r+0x20>)
 8001a8c:	2300      	movs	r3, #0
 8001a8e:	4604      	mov	r4, r0
 8001a90:	4608      	mov	r0, r1
 8001a92:	4611      	mov	r1, r2
 8001a94:	602b      	str	r3, [r5, #0]
 8001a96:	f7fe fd1f 	bl	80004d8 <_fstat>
 8001a9a:	1c43      	adds	r3, r0, #1
 8001a9c:	d102      	bne.n	8001aa4 <_fstat_r+0x1c>
 8001a9e:	682b      	ldr	r3, [r5, #0]
 8001aa0:	b103      	cbz	r3, 8001aa4 <_fstat_r+0x1c>
 8001aa2:	6023      	str	r3, [r4, #0]
 8001aa4:	bd38      	pop	{r3, r4, r5, pc}
 8001aa6:	bf00      	nop
 8001aa8:	200001b8 	.word	0x200001b8

08001aac <_isatty_r>:
 8001aac:	b538      	push	{r3, r4, r5, lr}
 8001aae:	4d06      	ldr	r5, [pc, #24]	@ (8001ac8 <_isatty_r+0x1c>)
 8001ab0:	2300      	movs	r3, #0
 8001ab2:	4604      	mov	r4, r0
 8001ab4:	4608      	mov	r0, r1
 8001ab6:	602b      	str	r3, [r5, #0]
 8001ab8:	f7fe fd1d 	bl	80004f6 <_isatty>
 8001abc:	1c43      	adds	r3, r0, #1
 8001abe:	d102      	bne.n	8001ac6 <_isatty_r+0x1a>
 8001ac0:	682b      	ldr	r3, [r5, #0]
 8001ac2:	b103      	cbz	r3, 8001ac6 <_isatty_r+0x1a>
 8001ac4:	6023      	str	r3, [r4, #0]
 8001ac6:	bd38      	pop	{r3, r4, r5, pc}
 8001ac8:	200001b8 	.word	0x200001b8

08001acc <_malloc_usable_size_r>:
 8001acc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001ad0:	1f18      	subs	r0, r3, #4
 8001ad2:	2b00      	cmp	r3, #0
 8001ad4:	bfbc      	itt	lt
 8001ad6:	580b      	ldrlt	r3, [r1, r0]
 8001ad8:	18c0      	addlt	r0, r0, r3
 8001ada:	4770      	bx	lr

08001adc <_init>:
 8001adc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ade:	bf00      	nop
 8001ae0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001ae2:	bc08      	pop	{r3}
 8001ae4:	469e      	mov	lr, r3
 8001ae6:	4770      	bx	lr

08001ae8 <_fini>:
 8001ae8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001aea:	bf00      	nop
 8001aec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001aee:	bc08      	pop	{r3}
 8001af0:	469e      	mov	lr, r3
 8001af2:	4770      	bx	lr
